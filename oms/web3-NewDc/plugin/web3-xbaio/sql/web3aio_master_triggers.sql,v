head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2011.03.16.05.36.17;	author zhang-tengyu;	state Exp;
branches;
next	;
deltatype	text;
kopt	b;
permissions	666;
commitid	8f04d80403d696d;
filename	web3aio_master_triggers.sql;


desc
@@


1.1
log
@*** empty log message ***
@
text
@------------------------------------------------------------------
-- Autogenerated per-table triggers for mutators
------------------------------------------------------------------

--------------------------------------------------
--- comp_bank_condition

create trigger inv_comp_bank_condition_ins
  after insert on comp_bank_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'comp_bank_condition', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.pay_scheme_id );
  end;
/
show errors

create trigger inv_comp_bank_condition_upd
  before update on comp_bank_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'comp_bank_condition', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.pay_scheme_id );
  end;
/
show errors

create trigger inv_comp_bank_condition_del
  before delete on comp_bank_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'comp_bank_condition', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.pay_scheme_id );
  end;
/
show errors

--------------------------------------------------
--- cooperate_bank_master

create trigger inv_cooperate_bank_master_ins
  after insert on cooperate_bank_master
  for each row
  declare
  begin
    invalidation.on_mutate( 'cooperate_bank_master', 'ins', 0, :new.pay_scheme_id );
  end;
/
show errors

create trigger inv_cooperate_bank_master_upd
  before update on cooperate_bank_master
  for each row
  declare
  begin
    invalidation.on_mutate( 'cooperate_bank_master', 'upd', 0, :old.pay_scheme_id );
  end;
/
show errors

create trigger inv_cooperate_bank_master_del
  before delete on cooperate_bank_master
  for each row
  declare
  begin
    invalidation.on_mutate( 'cooperate_bank_master', 'del', 0, :old.pay_scheme_id );
  end;
/
show errors

--------------------------------------------------
--- other_order_executed_count

create trigger inv_other_order_executed_c_ins
  after insert on other_order_executed_count
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_order_executed_count', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.record_div||','||:new.product_div||','||:new.pay_scheme_id||','||:new.order_chanel||','||:new.order_root_div||','||:new.biz_date );
  end;
/
show errors

create trigger inv_other_order_executed_c_upd
  before update on other_order_executed_count
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_order_executed_count', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.record_div||','||:old.product_div||','||:old.pay_scheme_id||','||:old.order_chanel||','||:old.order_root_div||','||:old.biz_date );
  end;
/
show errors

create trigger inv_other_order_executed_c_del
  before delete on other_order_executed_count
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_order_executed_count', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.record_div||','||:old.product_div||','||:old.pay_scheme_id||','||:old.order_chanel||','||:old.order_root_div||','||:old.biz_date );
  end;
/
show errors

--------------------------------------------------
--- amount_range

create trigger inv_amount_range_ins
  after insert on amount_range
  for each row
  declare
  begin
    invalidation.on_mutate( 'amount_range', 'ins', 0, :new.institution_code||','||:new.fund_type||','||:new.transaction_type );
  end;
/
show errors

create trigger inv_amount_range_upd
  before update on amount_range
  for each row
  declare
  begin
    invalidation.on_mutate( 'amount_range', 'upd', 0, :old.institution_code||','||:old.fund_type||','||:old.transaction_type );
  end;
/
show errors

create trigger inv_amount_range_del
  before delete on amount_range
  for each row
  declare
  begin
    invalidation.on_mutate( 'amount_range', 'del', 0, :old.institution_code||','||:old.fund_type||','||:old.transaction_type );
  end;
/
show errors

--------------------------------------------------
--- comp_bank_career_management

create trigger inv_comp_bank_career_manag_ins
  after insert on comp_bank_career_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'comp_bank_career_management', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.pay_scheme_id||','||:new.career_div );
  end;
/
show errors

create trigger inv_comp_bank_career_manag_upd
  before update on comp_bank_career_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'comp_bank_career_management', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.pay_scheme_id||','||:old.career_div );
  end;
/
show errors

create trigger inv_comp_bank_career_manag_del
  before delete on comp_bank_career_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'comp_bank_career_management', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.pay_scheme_id||','||:old.career_div );
  end;
/
show errors

--------------------------------------------------
--- career_shop_id

create trigger inv_career_shop_id_ins
  after insert on career_shop_id
  for each row
  declare
  begin
    invalidation.on_mutate( 'career_shop_id', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.career_div );
  end;
/
show errors

create trigger inv_career_shop_id_upd
  before update on career_shop_id
  for each row
  declare
  begin
    invalidation.on_mutate( 'career_shop_id', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.career_div );
  end;
/
show errors

create trigger inv_career_shop_id_del
  before delete on career_shop_id
  for each row
  declare
  begin
    invalidation.on_mutate( 'career_shop_id', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.career_div );
  end;
/
show errors

--------------------------------------------------
--- security_product

create trigger inv_security_product_ins
  after insert on security_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'security_product', 'ins', 0, :new.product_id||','||to_char(:new.apply_term_from, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_security_product_upd
  before update on security_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'security_product', 'upd', 0, :old.product_id||','||to_char(:old.apply_term_from, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_security_product_del
  before delete on security_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'security_product', 'del', 0, :old.product_id||','||to_char(:old.apply_term_from, 'YYMMDDHH24MISS') );
  end;
/
show errors

--------------------------------------------------
--- fx_account

create trigger inv_fx_account_ins
  after insert on fx_account
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_account', 'ins', 0, :new.fx_account_id );
  end;
/
show errors

create trigger inv_fx_account_upd
  before update on fx_account
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_account', 'upd', 0, :old.fx_account_id );
  end;
/
show errors

create trigger inv_fx_account_del
  before delete on fx_account
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_account', 'del', 0, :old.fx_account_id );
  end;
/
show errors

--------------------------------------------------
--- fx_account_code

create trigger inv_fx_account_code_ins
  after insert on fx_account_code
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_account_code', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.fx_system_code||','||:new.account_code||','||:new.fx_course_div );
  end;
/
show errors

create trigger inv_fx_account_code_upd
  before update on fx_account_code
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_account_code', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.fx_system_code||','||:old.account_code||','||:old.fx_course_div );
  end;
/
show errors

create trigger inv_fx_account_code_del
  before delete on fx_account_code
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_account_code', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.fx_system_code||','||:old.account_code||','||:old.fx_course_div );
  end;
/
show errors

--------------------------------------------------
--- comp_fx_condition

create trigger inv_comp_fx_condition_ins
  after insert on comp_fx_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'comp_fx_condition', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.fx_system_code );
  end;
/
show errors

create trigger inv_comp_fx_condition_upd
  before update on comp_fx_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'comp_fx_condition', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.fx_system_code );
  end;
/
show errors

create trigger inv_comp_fx_condition_del
  before delete on comp_fx_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'comp_fx_condition', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.fx_system_code );
  end;
/
show errors

--------------------------------------------------
--- fx_unnecessary_explanation

create trigger inv_fx_unnecessary_explana_ins
  after insert on fx_unnecessary_explanation
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_unnecessary_explanation', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.account_code||','||:new.fx_serial_no );
  end;
/
show errors

create trigger inv_fx_unnecessary_explana_upd
  before update on fx_unnecessary_explanation
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_unnecessary_explanation', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.account_code||','||:old.fx_serial_no );
  end;
/
show errors

create trigger inv_fx_unnecessary_explana_del
  before delete on fx_unnecessary_explanation
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_unnecessary_explanation', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.account_code||','||:old.fx_serial_no );
  end;
/
show errors

--------------------------------------------------
--- fx_transfer_master

create trigger inv_fx_transfer_master_ins
  after insert on fx_transfer_master
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_transfer_master', 'ins', 0, :new.fx_system_id||','||:new.transfer_div );
  end;
/
show errors

create trigger inv_fx_transfer_master_upd
  before update on fx_transfer_master
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_transfer_master', 'upd', 0, :old.fx_system_id||','||:old.transfer_div );
  end;
/
show errors

create trigger inv_fx_transfer_master_del
  before delete on fx_transfer_master
  for each row
  declare
  begin
    invalidation.on_mutate( 'fx_transfer_master', 'del', 0, :old.fx_system_id||','||:old.transfer_div );
  end;
/
show errors

--------------------------------------------------
--- sec_receipt_delivery_action

create trigger inv_sec_receipt_delivery_a_ins
  after insert on sec_receipt_delivery_action
  for each row
  declare
  begin
    invalidation.on_mutate( 'sec_receipt_delivery_action', 'ins', 0, :new.sec_receipt_delivery_action_id );
  end;
/
show errors

create trigger inv_sec_receipt_delivery_a_upd
  before update on sec_receipt_delivery_action
  for each row
  declare
  begin
    invalidation.on_mutate( 'sec_receipt_delivery_action', 'upd', 0, :old.sec_receipt_delivery_action_id );
  end;
/
show errors

create trigger inv_sec_receipt_delivery_a_del
  before delete on sec_receipt_delivery_action
  for each row
  declare
  begin
    invalidation.on_mutate( 'sec_receipt_delivery_action', 'del', 0, :old.sec_receipt_delivery_action_id );
  end;
/
show errors

--------------------------------------------------
--- feq_account

create trigger inv_feq_account_ins
  after insert on feq_account
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_account', 'ins', 0, :new.feq_account_id );
  end;
/
show errors

create trigger inv_feq_account_upd
  before update on feq_account
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_account', 'upd', 0, :old.feq_account_id );
  end;
/
show errors

create trigger inv_feq_account_del
  before delete on feq_account
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_account', 'del', 0, :old.feq_account_id );
  end;
/
show errors

@
