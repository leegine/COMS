head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2011.03.15.03.06.03;	author zhang-tengyu;	state Exp;
branches;
next	;
deltatype	text;
kopt	b;
permissions	666;
commitid	8b84d7ecf833551;
filename	eqtype_master_triggers.sql;


desc
@@


1.1
log
@*** empty log message ***
@
text
@------------------------------------------------------------------
-- Autogenerated per-table triggers for mutators
------------------------------------------------------------------

--------------------------------------------------
--- eqtype_traded_product_updq

create trigger inv_eqtype_traded_product__ins
  after insert on eqtype_traded_product_updq
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_traded_product_updq', 'ins', 0, :new.traded_product_id||','||:new.valid_until_biz_date );
  end;
/
show errors

create trigger inv_eqtype_traded_product__upd
  before update on eqtype_traded_product_updq
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_traded_product_updq', 'upd', 0, :old.traded_product_id||','||:old.valid_until_biz_date );
  end;
/
show errors

create trigger inv_eqtype_traded_product__del
  before delete on eqtype_traded_product_updq
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_traded_product_updq', 'del', 0, :old.traded_product_id||','||:old.valid_until_biz_date );
  end;
/
show errors

--------------------------------------------------
--- eqtype_traded_product

create trigger inv_eqtype_traded_product_ins
  after insert on eqtype_traded_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_traded_product', 'ins', 0, :new.traded_product_id );
  end;
/
show errors

create trigger inv_eqtype_traded_product_upd
  before update on eqtype_traded_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_traded_product', 'upd', 0, :old.traded_product_id );
  end;
/
show errors

create trigger inv_eqtype_traded_product_del
  before delete on eqtype_traded_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_traded_product', 'del', 0, :old.traded_product_id );
  end;
/
show errors

--------------------------------------------------
--- eqtype_product

create trigger inv_eqtype_product_ins
  after insert on eqtype_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_product', 'ins', 0, :new.product_id );
  end;
/
show errors

create trigger inv_eqtype_product_upd
  before update on eqtype_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_product', 'upd', 0, :old.product_id );
  end;
/
show errors

create trigger inv_eqtype_product_del
  before delete on eqtype_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_product', 'del', 0, :old.product_id );
  end;
/
show errors

@
