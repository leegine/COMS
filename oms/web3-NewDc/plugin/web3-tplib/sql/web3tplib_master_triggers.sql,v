head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2011.03.29.00.30.18;	author zhang-tengyu;	state Exp;
branches;
next	;
deltatype	text;
kopt	b;
permissions	666;
commitid	1744d9128041e20;
filename	web3tplib_master_triggers.sql;


desc
@@


1.1
log
@*** empty log message ***
@
text
@------------------------------------------------------------------
-- Autogenerated per-table triggers for mutators
------------------------------------------------------------------

--------------------------------------------------
--- eqtype_fixed_contract

create trigger inv_eqtype_fixed_contract_ins
  after insert on eqtype_fixed_contract
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_fixed_contract', 'ins', 0, :new.fixed_contract_id );
  end;
/
show errors

create trigger inv_eqtype_fixed_contract_upd
  before update on eqtype_fixed_contract
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_fixed_contract', 'upd', 0, :old.fixed_contract_id );
  end;
/
show errors

create trigger inv_eqtype_fixed_contract_del
  before delete on eqtype_fixed_contract
  for each row
  declare
  begin
    invalidation.on_mutate( 'eqtype_fixed_contract', 'del', 0, :old.fixed_contract_id );
  end;
/
show errors

--------------------------------------------------
--- fixed_fin_transaction

create trigger inv_fixed_fin_transaction_ins
  after insert on fixed_fin_transaction
  for each row
  declare
  begin
    invalidation.on_mutate( 'fixed_fin_transaction', 'ins', 0, :new.fixed_fin_transaction_id );
  end;
/
show errors

create trigger inv_fixed_fin_transaction_upd
  before update on fixed_fin_transaction
  for each row
  declare
  begin
    invalidation.on_mutate( 'fixed_fin_transaction', 'upd', 0, :old.fixed_fin_transaction_id );
  end;
/
show errors

create trigger inv_fixed_fin_transaction_del
  before delete on fixed_fin_transaction
  for each row
  declare
  begin
    invalidation.on_mutate( 'fixed_fin_transaction', 'del', 0, :old.fixed_fin_transaction_id );
  end;
/
show errors

--------------------------------------------------
--- tp_cash_balance

create trigger inv_tp_cash_balance_ins
  after insert on tp_cash_balance
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_cash_balance', 'ins', 0, :new.tp_cash_balance_id );
  end;
/
show errors

create trigger inv_tp_cash_balance_upd
  before update on tp_cash_balance
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_cash_balance', 'upd', 0, :old.tp_cash_balance_id );
  end;
/
show errors

create trigger inv_tp_cash_balance_del
  before delete on tp_cash_balance
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_cash_balance', 'del', 0, :old.tp_cash_balance_id );
  end;
/
show errors

@
