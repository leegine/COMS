head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2011.03.29.00.30.09;	author zhang-tengyu;	state Exp;
branches;
next	;
deltatype	text;
kopt	b;
permissions	666;
commitid	1744d9128041e20;
filename	web3tplib_account_triggers.sql;


desc
@@


1.1
log
@*** empty log message ***
@
text
@------------------------------------------------------------------
-- Autogenerated per-table triggers for mutators
------------------------------------------------------------------

--------------------------------------------------
--- tp_calc_result_equity

create trigger inv_tp_calc_result_equity_ins
  after insert on tp_calc_result_equity
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_equity', 'ins', :new.account_id, :new.calc_result_equity_id );
  end;
/
show errors

create trigger inv_tp_calc_result_equity_upd
  before update on tp_calc_result_equity
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_equity', 'upd', :old.account_id, :old.calc_result_equity_id );
  end;
/
show errors

create trigger inv_tp_calc_result_equity_del
  before delete on tp_calc_result_equity
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_equity', 'del', :old.account_id, :old.calc_result_equity_id );
  end;
/
show errors

--------------------------------------------------
--- tp_calc_result_equity_detail

create trigger inv_tp_calc_result_equity__ins
  after insert on tp_calc_result_equity_detail
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_equity_detail', 'ins', :new.account_id, :new.calc_result_equity_id );
  end;
/
show errors

create trigger inv_tp_calc_result_equity__upd
  before update on tp_calc_result_equity_detail
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_equity_detail', 'upd', :old.account_id, :old.calc_result_equity_id );
  end;
/
show errors

create trigger inv_tp_calc_result_equity__del
  before delete on tp_calc_result_equity_detail
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_equity_detail', 'del', :old.account_id, :old.calc_result_equity_id );
  end;
/
show errors

--------------------------------------------------
--- tp_calc_result_margin

create trigger inv_tp_calc_result_margin_ins
  after insert on tp_calc_result_margin
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_margin', 'ins', :new.account_id, :new.calc_result_margin_id );
  end;
/
show errors

create trigger inv_tp_calc_result_margin_upd
  before update on tp_calc_result_margin
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_margin', 'upd', :old.account_id, :old.calc_result_margin_id );
  end;
/
show errors

create trigger inv_tp_calc_result_margin_del
  before delete on tp_calc_result_margin
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_margin', 'del', :old.account_id, :old.calc_result_margin_id );
  end;
/
show errors

--------------------------------------------------
--- tp_calc_result_margin_detail

create trigger inv_tp_calc_result_margin__ins
  after insert on tp_calc_result_margin_detail
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_margin_detail', 'ins', :new.account_id, :new.calc_result_margin_id );
  end;
/
show errors

create trigger inv_tp_calc_result_margin__upd
  before update on tp_calc_result_margin_detail
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_margin_detail', 'upd', :old.account_id, :old.calc_result_margin_id );
  end;
/
show errors

create trigger inv_tp_calc_result_margin__del
  before delete on tp_calc_result_margin_detail
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_calc_result_margin_detail', 'del', :old.account_id, :old.calc_result_margin_id );
  end;
/
show errors

--------------------------------------------------
--- orix_tp_calc_result_equity

create trigger inv_orix_tp_calc_result_eq_ins
  after insert on orix_tp_calc_result_equity
  for each row
  declare
  begin
    invalidation.on_mutate( 'orix_tp_calc_result_equity', 'ins', :new.account_id, :new.calc_result_equity_id );
  end;
/
show errors

create trigger inv_orix_tp_calc_result_eq_upd
  before update on orix_tp_calc_result_equity
  for each row
  declare
  begin
    invalidation.on_mutate( 'orix_tp_calc_result_equity', 'upd', :old.account_id, :old.calc_result_equity_id );
  end;
/
show errors

create trigger inv_orix_tp_calc_result_eq_del
  before delete on orix_tp_calc_result_equity
  for each row
  declare
  begin
    invalidation.on_mutate( 'orix_tp_calc_result_equity', 'del', :old.account_id, :old.calc_result_equity_id );
  end;
/
show errors

--------------------------------------------------
--- orix_tp_calc_result_margin

create trigger inv_orix_tp_calc_result_ma_ins
  after insert on orix_tp_calc_result_margin
  for each row
  declare
  begin
    invalidation.on_mutate( 'orix_tp_calc_result_margin', 'ins', :new.account_id, :new.calc_result_margin_id );
  end;
/
show errors

create trigger inv_orix_tp_calc_result_ma_upd
  before update on orix_tp_calc_result_margin
  for each row
  declare
  begin
    invalidation.on_mutate( 'orix_tp_calc_result_margin', 'upd', :old.account_id, :old.calc_result_margin_id );
  end;
/
show errors

create trigger inv_orix_tp_calc_result_ma_del
  before delete on orix_tp_calc_result_margin
  for each row
  declare
  begin
    invalidation.on_mutate( 'orix_tp_calc_result_margin', 'del', :old.account_id, :old.calc_result_margin_id );
  end;
/
show errors

--------------------------------------------------
--- payment_requisit_mng

create trigger inv_payment_requisit_mng_ins
  after insert on payment_requisit_mng
  for each row
  declare
  begin
    invalidation.on_mutate( 'payment_requisit_mng', 'ins', :new.account_id, :new.account_id );
  end;
/
show errors

create trigger inv_payment_requisit_mng_upd
  before update on payment_requisit_mng
  for each row
  declare
  begin
    invalidation.on_mutate( 'payment_requisit_mng', 'upd', :old.account_id, :old.account_id );
  end;
/
show errors

create trigger inv_payment_requisit_mng_del
  before delete on payment_requisit_mng
  for each row
  declare
  begin
    invalidation.on_mutate( 'payment_requisit_mng', 'del', :old.account_id, :old.account_id );
  end;
/
show errors

--------------------------------------------------
--- tp_cash_balance_frgn

create trigger inv_tp_cash_balance_frgn_ins
  after insert on tp_cash_balance_frgn
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_cash_balance_frgn', 'ins', :new.account_id, :new.tp_cash_balance_frgn_id );
  end;
/
show errors

create trigger inv_tp_cash_balance_frgn_upd
  before update on tp_cash_balance_frgn
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_cash_balance_frgn', 'upd', :old.account_id, :old.tp_cash_balance_frgn_id );
  end;
/
show errors

create trigger inv_tp_cash_balance_frgn_del
  before delete on tp_cash_balance_frgn
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_cash_balance_frgn', 'del', :old.account_id, :old.tp_cash_balance_frgn_id );
  end;
/
show errors

--------------------------------------------------
--- tp_other_temp_restraint

create trigger inv_tp_other_temp_restrain_ins
  after insert on tp_other_temp_restraint
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_other_temp_restraint', 'ins', :new.account_id, :new.rowid );
  end;
/
show errors

create trigger inv_tp_other_temp_restrain_upd
  before update on tp_other_temp_restraint
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_other_temp_restraint', 'upd', :old.account_id, :old.rowid );
  end;
/
show errors

create trigger inv_tp_other_temp_restrain_del
  before delete on tp_other_temp_restraint
  for each row
  declare
  begin
    invalidation.on_mutate( 'tp_other_temp_restraint', 'del', :old.account_id, :old.rowid );
  end;
/
show errors

@
