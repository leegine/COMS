head	1.1;
access;
symbols;
locks; strict;
comment	@// @;


1.1
date	2011.03.14.04.34.35;	author che-jin;	state Exp;
branches;
next	;
deltatype	text;
kopt	kv;
permissions	666;
commitid	8884d7d97833a75;
filename	WEB3BranchPreferencesNameDef.java;


desc
@@


1.1
log
@*** empty log message ***
@
text
@/**
Copyright        : (株)大和総研 証券ソリューションシステム第二部
File Name        : プリファ@レンス名定数定義インタフェイスWEB3BranchPreferencesNameDef.java)
Author Name      : Daiwa Institute of Research
Revesion History : 2005/08/30 孟東(sinocom) 新規作成
Revesion History : 2006/02/27 凌建平(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo343
Revesion History : 2006/03/28 凌建平(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo358
Revesion History : 2006/04/24 凌建平(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo365
Revesion History : 2006/04/24 凌建平(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo366
Revesion History : 2006/04/25 凌建平(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo367
Revesion History : 2006/05/19 凌建平(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo374
Revesion History : 2006/06/08 凌建平(中訊) インターフェンス申請・No081
Revesion History : 2006/06/26 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo376
Revesion History : 2006/06/26 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo383
Revesion History : 2006/06/28 凌建平(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo385
Revesion History : 2006/07/14 凌建平(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo393
Revesion History : 2006/07/14 凌建平(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo382
Revesion History : 2006/08/16 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo403
Revesion History : 2006/08/17 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo404
Revesion History : 2006/08/31 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo406
Revesion History : 2006/09/04 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo411
Revesion History : 2006/09/14 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo422
Revesion History : 2006/09/14 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo412
Revesion History : 2006/09/14 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo448
Revesion History : 2006/11/28 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo447
Revesion History : 2007/01/19 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo455
Revesion History : 2007/04/23 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo476
Revesion History : 2007/06/12 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo499
Revesion History : 2007/06/13 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo507
Revesion History : 2007/06/16 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo505
Revesion History : 2007/07/04 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo520
Revesion History : 2007/07/20 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo529
Revesion History : 2007/07/25 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo533
Revesion History : 2007/07/25 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo531
Revesion History : 2007/08/28 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo540
Revesion History : 2007/08/28 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo538
Revesion History : 2007/11/12 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo575
Revesion History : 2007/11/16 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo577
Revesion History : 2008/03/12 栄イ(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo610
Revesion History : 2008/09/09 趙林鵬(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo644
Revesion History : 2008/10/21 陸文静(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo654,658
Revesion History : 2008/10/22 陸文静(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo657
Revesion History : 2008/10/28 趙林鵬(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo660
Revesion History : 2008/12/02 趙林鵬(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo664
Revesion History : 2008/12/11 趙林鵬(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo665
Revesion History : 2008/12/16 趙林鵬(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo667
Revesion History : 2009/03/18 趙林鵬(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo678,679
Revesion History : 2009/12/03 趙林鵬(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo699
Revesion History : 2009/12/15 趙林鵬(中訊) 共通仕様変更管理台帳・ＤＢレイアウトNo700
*/
package webbroker3.common.define;

/**
 * プリファ@レンス名定数定義インタフェイス
 *
 * @@author meng-d
 * @@version 1.0
 */
public interface WEB3BranchPreferencesNameDef
{
    /**
     * fxaccountopen.lowlimit.age：FX口座開設年齢下限値　@　@　@  　@　@
     */
    public final static String LOWLIMIT_AGE = "fxaccountopen.lowlimit.age";

    /**
     * fxaccountopen.highlimit.age：FX口座開設年齢上限値（優）
     */
    public final static String HIGHLIMIT_AGE = "fxaccountopen.highlimit.age";

    /**
     * mf.commission.calc：投資信託手数料計算方法@
     */
    public final static String COMMISSION_CALC = "mf.commission.calc";

    /**
     * mf.switch.withholdingtax.restriction.rate：投資信託乗換時源泉徴収拘束率
     */
    public final static String SWITCH_WITHHOLDINGTAX_RESTRICTION_RATE = "mf.switch.withholdingtax.restriction.rate";

    /**
     * mf.switch.buying.minimum.amount.check：投資信託乗換先買付最低金額チェック方法@
     */
    public final static String SWITCH_BUYING_MINIMUM_AMOUNT_CHECK = "mf.switch.buying.minimum.amount.check";

    /**
     * sell.quantity.check：株式売却可能残判定方法@
     */
    public final static String SELL_QUANTITY_CHECK = "sell.quantity.check";

    /**
     * triggerorder.sucorder.maxordercount：連続注文最大設定数
     */
    public final static String TRIGGERORDER_SUC_ORDER_MAX_ORDER_COUNT = "triggerorder.sucorder.maxordercount";

    /**
     * mf.dissolution.create.payment.order：投資信託解約時出金注文生成
     */
    public final static String DISSOLUTION_CREATE_PAYMENT_ORDER = "mf.dissolution.create.payment.order";

    /**
     * mf.available.datacode：投資信託使用可能データコード設定
     */
    public final static String AVAILABLE_DATACODE = "mf.available.datacode";

    /**
     * trade.history.getproductname.div：銘柄名取得先区分
     */
    public final static String GETPRODUCTNAME_DIV = "trade.history.getproductname.div";

    /**
     * gentrade.bizlogicprovider.div：委託手数料コース取得区分
     */
    public final static String GENTRADE_BIZLOGICPROVIDER_DIV = "gentrade.bizlogicprovider.div";

    /**
     * fx.mrfaccount.check：FX：MRF口座開設チェック実施
     */
    public final static String FX_MRFACCOUNT_CHECK = "fx.mrfaccount.check";

    /**
     * account.lock.real.cooperation：顧客ロック（リアル連携）
     */
    public final static String ACCOUNT_LOCK_REAL_COOPERATION = "account.lock.real.cooperation";

    /**
     * triggerorder.sucorder.checktp：余力チェック実施
     */
    public final static String TRIGGERORDER_SUCORDER_CHECKTP = "triggerorder.sucorder.checktp";

    /**
     * gentrade.soap.connect.div：SOAP接続区分及び形式
     */
    public final static String GENTRADE_SOAP_CONNECT_DIV = "gentrade.soap.connect.div";

    /**
     * multi.changeability.of.market.notified.order.in.break.time：市場送信済注文複数回訂正可否（休憩時間中）
     */
    public final static String MULTI_CHANGEABILITY_OF_MARKET_NOTIFIED_ORDER_IN_BREAK_TIME = "multi.changeability.of.market.notified.order.in.break.time";

    /**
     * fx.deliverydate.insert.check：FX：受渡日取得チェック
     */
    public final static String FX_DELIVERY_DATE_INSERT_CHECK = "fx.deliverydate.insert.check";

    /**
     * today.payment.check：当日出金チェック
     */
    public final static String TODAY_PAYMENT_CHECK = "today.payment.check";

    /**
     * duplication.mailaddress.check：メール重複チェック
     */
    public final static String PRE_NAME_DUPLO = "duplication.mailaddress.check";

    /**
     * accopen.examination.duplicateaccount.corp：口座開設審査・法@人.同一顧客チェック
     */
    public final static String ACC_EX_DUPLO_COP = "accopen.examination.duplicateaccount.corp";

    /**
     * accopen.examination.yellowaccount.corp：口座開設審査・法@人Y客チェック
     */
    public final static String ACC_EX_YACC_COP = "accopen.examination.yellowaccount.corp";

    /**
     * accopen.examination.mailaddress.corp：口座開設審査・法@人.メールアドレスチェック
     */
    public final static String ACC_EX_MAIL_COP = "accopen.examination.mailaddress.corp";

    /**
     * accopen.examination.telno.corp：口座開設審査・法@人.電話番号チェック
     */
    public final static String ACC_EX_TEL_COP = "accopen.examination.telno.corp";

    /**
     * accopen.examination.duplicateaccount.indiv：口座開設審査・個人.同一顧客チェック
     */
    public final static String ACC_EX_DUPLO_INDV = "accopen.examination.duplicateaccount.indiv";

    /**
     * accopen.examination.yellowaccount.indiv：口座開設審査・個人Y客チェック
     */
    public final static String ACC_EX_YACC_INDV = "accopen.examination.yellowaccount.indiv";

    /**
     * accopen.examination.mailaddress.indiv：口座開設審査・個人.メールアドレスチェック
     */
    public final static String ACC_EX_MAIL_INDV = "accopen.examination.mailaddress.indiv";

    /**
     * accopen.examination.telno.indiv：口座開設審査・個人.電話番号チェック
     */
    public final static String ACC_EX_TEL_INDV = "accopen.examination.telno.indiv";

    /**
     * mf.fixed.buying.min.amount：投資信託定時定額買付最低金額
     */
    public final static String MF_FIXED_BUYING_MIN_AMOUNT = "mf.fixed.buying.min.amount";

    /**
     * mf.fixed.buying.unit.amount：投資信託定時定額買付単位金額
     */
    public final static String MF_FIXED_BUYING_UNIT_AMOUNT = "mf.fixed.buying.unit.amount";

    /**
     * mf.commission.free.product：投信手数料無料銘柄設定
     */
    public final static String MF_COMMISSION_FREE_PRODUCT = "mf.commission.free.product";

    /**
     * ipo.resident.check：IPO居住者チェック
     */
    public final static String IPO_RESIDENT_CHECK = "ipo.resident.check";

    /**
     * triggerorder.wlimitorder.divergencerate：W指値注文・発注条件単価乖離倍率
     */
    public final static String TRIGGERORDER_WLIMITORDER_DIVERGENCERATE = "triggerorder.wlimitorder.divergencerate";

    /**
     * accopen.real.div：口座開設リアル連携実施区分
     */
    public final static String ACCOPEN_REAL_DIV = "accopen.real.div";

    /**
     * mf.recruit.mq.send.div：投信募集注文一括送信区分
     */
    public final static String MF_RECRUIT_MQ_SEND_DIV = "mf.recruit.mq.send.div";

    /**
     * ipo.limit.quantity.check：IPO上限申告株数チェック
     */
    public final static String IPO_LIMIT_QUANTITY_CHECK = "ipo.limit.quantity.check";

    /**
     * bond.salesoffice.tpcheck.div：営業店取引余力チェック実施区分-債券
     */
    public final static String BOND_SALESOFFICE_TPCHECK_DIV = "bond.salesoffice.tpcheck.div";

    /**
     * aio.bond.payment.cooperation：債券出金連携実行区分
     */
    public final static String AIO_BOND_PAYMENT_COOPERATION = "aio.bond.payment.cooperation";

    /**
     * plowback.syokuchi：諸口(再投資)
     */
    public final static String PLOWBACK_SYOKUCHI = "plowback.syokuchi";

    /**
     * noplowback.syokuchi：諸口(分配) -再投資でない-
     */
    public final static String NOPLOWBACK_SYOKUCHI = "noplowback.syokuchi";

    /**
     * triggerorder.wlimitorder.check.order.cond.price：W指値注文・発注条件単価チェック実施区分
     */
    public final static String TRIGGERORDER_WLIMITORDER_CHECK_ORDER_COND_PRICE = "triggerorder.wlimitorder.check.order.cond.price";

    /**
     * occupationcode.update：お客様情報職業コード更新
     */
    public final static String OCCUPATIONCODE_UPDATE = "occupationcode.update";

    /**
     * realname.update：お客様情報顧客正式名称更新
     */
    public final static String REALNAME_UPDATE = "realname.update";

    /**
     * margin.forcedsettleorder.baseestimatedasset：信用取引強制決済基準評価額（強調表示判定用）
     */
    public final static String MARGIN_FORCEDSETTLEORDER_BASEESTIMATEDASSET = "margin.forcedsettleorder.baseestimatedasset";

    /**
     * evening.session.div：夕場実施区分
     */
    public final static String EVENING_SESSION_DIV = "evening.session.div";

    /**
     * login.rejectip.check.X：拒否IPチェック要否
     */
    public final static String LOGIN_REJECTIP_CHECK = "login.rejectip.check.";

    /**
     * login.log.record.X：ログイン履歴登録要否
     */
    public final static String LOGIN_LOG_RECORD = "login.log.record.";

    /**
     * eqtype.final.day.with.right：権利付き最終日チェック
     */
    public final static String EQTYPE_FINAL_DAY_WITH_RIGHT = "eqtype.final.day.with.right";

    /**
     * ifodeposit.lackcharge.non.management：証拠金不足額非管理フラグ
     */
    public final static String IFODEPOSIT_LACKCHARGE_NON_MANAGEMENT = "ifodeposit.lackcharge.non.management";

    /**
     * ipo.offer.tradingpower.check：IPO購入申込余力チェック
     */
    public final static String IPO_OFFER_TRADINGPOWER_CHECK = "ipo.offer.tradingpower.check";

    /**
     * second.deposit.rate：第二水準保証金維持率
     */
    public final static String SECOND_DEPOSIT_RATE = "second.deposit.rate";

    /**
     * second.deposit.back.rate：第二水準保証金戻し維持率
     */
    public final static String SECOND_DEPOSIT_BACK_RATE = "second.deposit.back.rate";

    /**
     * accountinfo.multi.mailaddress.flag：お客様情報：複数メールアドレスフラグ
     */
    public final static String ACCOUNTINFO_MULTI_MAILADDRESS_FLAG = "accountinfo.multi.mailaddress.flag";

    /**
     * sl_lowlimit.age.check：年齢下限値　@※証券担保ローンで使用
     */
    public final static String SL_LOWLIMIT_AGE_CHECK = "sl_lowlimit.age.check";

    /**
     * sl_highlimit.age.check：年齢上限値　@※証券担保ローンで使用
     */
    public final static String SL_HIGHLIMIT_AGE_CHECK = "sl_highlimit.age.check";

    /**
     * ifodeposit.non.calc.sq.product：証拠金SQ日銘柄ポジション非計上
     */
    public final static String IFODEPOSIT_NON_CALC_SQ_PRODUCT = "ifodeposit.non.calc.sq.product";

    /**
     * triggerorder.sucorder.carryover：連続注文繰越実施区分
     */
    public final static String TRIGGERORDER_SUCORDER_CARRYOVER = "triggerorder.sucorder.carryover";

    /**
     * today.clearance.determination.div：当日消し込み判定区分
     */
    public final static String TODAY_CLEARANCE_DETERMINATION_DIV = "today.clearance.determination.div";

    /**
     * cashout.tradingpower.check：出金余力チェック時の出金可能額取得方法@
     */
    public final static String CASHOUT_TRADINGPOWER_CHECK = "cashout.tradingpower.check";

    /**
     * first.margin.pass.day1：第一水準追証有効経過日数
     */
    public final static String FIRST_MARGIN_PASS_DAY1 = "first.margin.pass.day1";

    /**
     * second.deposit.compulsory.execution.timelimit：第二水準追証強制決済開始時刻
     */
    public final static String SECOND_DEPOSIT_COMPULSORY_EXECUTION_TIMELIMIT = "second.deposit.compulsory.execution.timelimit";

    /**
     * first.deposit.rate1：第一水準保証金維持率
     */
    public final static String FIRST_DEPOSIT_RATE1 = "first.deposit.rate1";

    /**
     * first.deposit.rate2：第一水準保証金維持率（設定２）　@※設定データ無し
     */
    public final static String FIRST_DEPOSIT_RATE2 = "first.deposit.rate2";

    /**
     * first.margin.pass.day2：第一水準追証有効経過日数（設定２）　@※設定データ無し
     */
    public final static String FIRST_MARGIN_PASS_DAY2 = "first.margin.pass.day2";

    /**
     * second.deposit.marginopen.tpstop：第二水準追証発生時の新規建て余力停止
     */
    public final static String SECOND_DEPOSIT_MARGINOPEN_TPSTOP = "second.deposit.marginopen.tpstop";

    /**
     * receipt.margin.deposit.highlimit.rate：受入保証金占有率の上限値
     */
    public final static String RECEIPT_MARGIN_DEPOSIT_HIGHLIMIT_RATE = "receipt.margin.deposit.highlimit.rate";

    /**
     * mf.payment.method.check：投信：受渡方法@チェック実施
     */
    public final static String MF_PAYMENT_METHOD_CHECK = "mf.payment.method.check";

    /**
     * swap.contract.profitloss.restraint：現引現渡建玉評価損益拘束区分
     */
    public final static String SWAP_CONTRACT_PROFITLOSS_RESTRAINT = "swap.contract.profitloss.restraint";

    /**
     * swap.contract.deposit.restraint：現引現渡建玉必要保証金拘束区分
     */
    public final static String SWAP_CONTRACT_DEPOSIT_RESTRAINT = "swap.contract.deposit.restraint";

    /**
     * cashout.today.deposit.transfer.div：出金に伴う当日保証金振替実施区分
     */
    public final static String CASHOUT_TODAY_DEPOSIT_TRANSFER_DIV = "cashout.today.deposit.transfer.div";
}
@
