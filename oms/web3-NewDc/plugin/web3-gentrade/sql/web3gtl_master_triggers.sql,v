head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2011.03.15.06.03.34;	author zhang-tengyu;	state Exp;
branches;
next	;
deltatype	text;
kopt	b;
permissions	666;
commitid	8004d7f01265769;
filename	web3gtl_master_triggers.sql;


desc
@@


1.1
log
@*** empty log message ***
@
text
@------------------------------------------------------------------
-- Autogenerated per-table triggers for mutators
------------------------------------------------------------------

--------------------------------------------------
--- calendar

create trigger inv_calendar_ins
  after insert on calendar
  for each row
  declare
  begin
    invalidation.on_mutate( 'calendar', 'ins', 0, to_char(:new.holiday, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_calendar_upd
  before update on calendar
  for each row
  declare
  begin
    invalidation.on_mutate( 'calendar', 'upd', 0, to_char(:old.holiday, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_calendar_del
  before delete on calendar
  for each row
  declare
  begin
    invalidation.on_mutate( 'calendar', 'del', 0, to_char(:old.holiday, 'YYMMDDHH24MISS') );
  end;
/
show errors

--------------------------------------------------
--- trading_time

create trigger inv_trading_time_ins
  after insert on trading_time
  for each row
  declare
  begin
    invalidation.on_mutate( 'trading_time', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.market_code||','||:new.trading_time_type||','||:new.product_code||','||:new.biz_date_type||','||:new.start_time );
  end;
/
show errors

create trigger inv_trading_time_upd
  before update on trading_time
  for each row
  declare
  begin
    invalidation.on_mutate( 'trading_time', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.market_code||','||:old.trading_time_type||','||:old.product_code||','||:old.biz_date_type||','||:old.start_time );
  end;
/
show errors

create trigger inv_trading_time_del
  before delete on trading_time
  for each row
  declare
  begin
    invalidation.on_mutate( 'trading_time', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.market_code||','||:old.trading_time_type||','||:old.product_code||','||:old.biz_date_type||','||:old.start_time );
  end;
/
show errors

--------------------------------------------------
--- tax_rate_table

create trigger inv_tax_rate_table_ins
  after insert on tax_rate_table
  for each row
  declare
  begin
    invalidation.on_mutate( 'tax_rate_table', 'ins', 0, :new.institution_code||','||:new.tax_type||','||to_char(:new.appli_start_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_tax_rate_table_upd
  before update on tax_rate_table
  for each row
  declare
  begin
    invalidation.on_mutate( 'tax_rate_table', 'upd', 0, :old.institution_code||','||:old.tax_type||','||to_char(:old.appli_start_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_tax_rate_table_del
  before delete on tax_rate_table
  for each row
  declare
  begin
    invalidation.on_mutate( 'tax_rate_table', 'del', 0, :old.institution_code||','||:old.tax_type||','||to_char(:old.appli_start_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

--------------------------------------------------
--- order_accept_status

create trigger inv_order_accept_status_ins
  after insert on order_accept_status
  for each row
  declare
  begin
    invalidation.on_mutate( 'order_accept_status', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.order_acc_product||','||:new.order_acc_transaction );
  end;
/
show errors

create trigger inv_order_accept_status_upd
  before update on order_accept_status
  for each row
  declare
  begin
    invalidation.on_mutate( 'order_accept_status', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.order_acc_product||','||:old.order_acc_transaction );
  end;
/
show errors

create trigger inv_order_accept_status_del
  before delete on order_accept_status
  for each row
  declare
  begin
    invalidation.on_mutate( 'order_accept_status', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.order_acc_product||','||:old.order_acc_transaction );
  end;
/
show errors

--------------------------------------------------
--- inst_branch_product

create trigger inv_inst_branch_product_ins
  after insert on inst_branch_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'inst_branch_product', 'ins', 0, :new.branch_id||','||:new.commission_product_code );
  end;
/
show errors

create trigger inv_inst_branch_product_upd
  before update on inst_branch_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'inst_branch_product', 'upd', 0, :old.branch_id||','||:old.commission_product_code );
  end;
/
show errors

create trigger inv_inst_branch_product_del
  before delete on inst_branch_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'inst_branch_product', 'del', 0, :old.branch_id||','||:old.commission_product_code );
  end;
/
show errors

--------------------------------------------------
--- branch_market_dealt_cond

create trigger inv_branch_market_dealt_co_ins
  after insert on branch_market_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_market_dealt_cond', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.market_code );
  end;
/
show errors

create trigger inv_branch_market_dealt_co_upd
  before update on branch_market_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_market_dealt_cond', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.market_code );
  end;
/
show errors

create trigger inv_branch_market_dealt_co_del
  before delete on branch_market_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_market_dealt_cond', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.market_code );
  end;
/
show errors

--------------------------------------------------
--- branch_index_dealt_cond

create trigger inv_branch_index_dealt_con_ins
  after insert on branch_index_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_index_dealt_cond', 'ins', 0, :new.target_product_code||','||:new.institution_code||','||:new.branch_code||','||:new.market_code||','||:new.future_option_div );
  end;
/
show errors

create trigger inv_branch_index_dealt_con_upd
  before update on branch_index_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_index_dealt_cond', 'upd', 0, :old.target_product_code||','||:old.institution_code||','||:old.branch_code||','||:old.market_code||','||:old.future_option_div );
  end;
/
show errors

create trigger inv_branch_index_dealt_con_del
  before delete on branch_index_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_index_dealt_cond', 'del', 0, :old.target_product_code||','||:old.institution_code||','||:old.branch_code||','||:old.market_code||','||:old.future_option_div );
  end;
/
show errors

--------------------------------------------------
--- enable_order_condition

create trigger inv_enable_order_condition_ins
  after insert on enable_order_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'enable_order_condition', 'ins', 0, :new.institution_code||','||:new.product_type||','||:new.future_option_div||','||:new.margin_trading_div||','||:new.market_code );
  end;
/
show errors

create trigger inv_enable_order_condition_upd
  before update on enable_order_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'enable_order_condition', 'upd', 0, :old.institution_code||','||:old.product_type||','||:old.future_option_div||','||:old.margin_trading_div||','||:old.market_code );
  end;
/
show errors

create trigger inv_enable_order_condition_del
  before delete on enable_order_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'enable_order_condition', 'del', 0, :old.institution_code||','||:old.product_type||','||:old.future_option_div||','||:old.margin_trading_div||','||:old.market_code );
  end;
/
show errors

--------------------------------------------------
--- equity_comm_account_cond_mst

create trigger inv_equity_comm_account_co_ins
  after insert on equity_comm_account_cond_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_account_cond_mst', 'ins', 0, :new.institution_code||','||:new.branch_id||','||:new.account_id||','||:new.comm_product_code||','||:new.valid_until_biz_date );
  end;
/
show errors

create trigger inv_equity_comm_account_co_upd
  before update on equity_comm_account_cond_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_account_cond_mst', 'upd', 0, :old.institution_code||','||:old.branch_id||','||:old.account_id||','||:old.comm_product_code||','||:old.valid_until_biz_date );
  end;
/
show errors

create trigger inv_equity_comm_account_co_del
  before delete on equity_comm_account_cond_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_account_cond_mst', 'del', 0, :old.institution_code||','||:old.branch_id||','||:old.account_id||','||:old.comm_product_code||','||:old.valid_until_biz_date );
  end;
/
show errors

--------------------------------------------------
--- equity_comm_rev_mst

create trigger inv_equity_comm_rev_mst_ins
  after insert on equity_comm_rev_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_rev_mst', 'ins', 0, :new.institution_code||','||:new.comm_product_code||','||to_char(:new.appli_start_date, 'YYMMDDHH24MISS')||','||:new.order_channel||','||:new.transaction_type||','||:new.exec_cond_type||','||:new.pay_type||','||:new.sonar_market_code||','||:new.underlying_product_code||','||:new.day_trade_type );
  end;
/
show errors

create trigger inv_equity_comm_rev_mst_upd
  before update on equity_comm_rev_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_rev_mst', 'upd', 0, :old.institution_code||','||:old.comm_product_code||','||to_char(:old.appli_start_date, 'YYMMDDHH24MISS')||','||:old.order_channel||','||:old.transaction_type||','||:old.exec_cond_type||','||:old.pay_type||','||:old.sonar_market_code||','||:old.underlying_product_code||','||:old.day_trade_type );
  end;
/
show errors

create trigger inv_equity_comm_rev_mst_del
  before delete on equity_comm_rev_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_rev_mst', 'del', 0, :old.institution_code||','||:old.comm_product_code||','||to_char(:old.appli_start_date, 'YYMMDDHH24MISS')||','||:old.order_channel||','||:old.transaction_type||','||:old.exec_cond_type||','||:old.pay_type||','||:old.sonar_market_code||','||:old.underlying_product_code||','||:old.day_trade_type );
  end;
/
show errors

--------------------------------------------------
--- equity_comm_cond

create trigger inv_equity_comm_cond_ins
  after insert on equity_comm_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_cond', 'ins', 0, :new.institution_code||','||:new.comm_product_code||','||:new.reg_no||','||to_char(:new.appli_start_date, 'YYMMDDHH24MISS')||','||:new.sequence_no );
  end;
/
show errors

create trigger inv_equity_comm_cond_upd
  before update on equity_comm_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_cond', 'upd', 0, :old.institution_code||','||:old.comm_product_code||','||:old.reg_no||','||to_char(:old.appli_start_date, 'YYMMDDHH24MISS')||','||:old.sequence_no );
  end;
/
show errors

create trigger inv_equity_comm_cond_del
  before delete on equity_comm_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_cond', 'del', 0, :old.institution_code||','||:old.comm_product_code||','||:old.reg_no||','||to_char(:old.appli_start_date, 'YYMMDDHH24MISS')||','||:old.sequence_no );
  end;
/
show errors

--------------------------------------------------
--- equity_comm_cond_mst

create trigger inv_equity_comm_cond_mst_ins
  after insert on equity_comm_cond_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_cond_mst', 'ins', 0, :new.institution_code||','||:new.comm_product_code||','||:new.reg_no||','||to_char(:new.appli_start_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_equity_comm_cond_mst_upd
  before update on equity_comm_cond_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_cond_mst', 'upd', 0, :old.institution_code||','||:old.comm_product_code||','||:old.reg_no||','||to_char(:old.appli_start_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_equity_comm_cond_mst_del
  before delete on equity_comm_cond_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'equity_comm_cond_mst', 'del', 0, :old.institution_code||','||:old.comm_product_code||','||:old.reg_no||','||to_char(:old.appli_start_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

--------------------------------------------------
--- orderexecution_end

create trigger inv_orderexecution_end_ins
  after insert on orderexecution_end
  for each row
  declare
  begin
    invalidation.on_mutate( 'orderexecution_end', 'ins', 0, :new.institution_code||','||:new.product_type||','||:new.future_option_div||','||:new.orderexecution_end_type );
  end;
/
show errors

create trigger inv_orderexecution_end_upd
  before update on orderexecution_end
  for each row
  declare
  begin
    invalidation.on_mutate( 'orderexecution_end', 'upd', 0, :old.institution_code||','||:old.product_type||','||:old.future_option_div||','||:old.orderexecution_end_type );
  end;
/
show errors

create trigger inv_orderexecution_end_del
  before delete on orderexecution_end
  for each row
  declare
  begin
    invalidation.on_mutate( 'orderexecution_end', 'del', 0, :old.institution_code||','||:old.product_type||','||:old.future_option_div||','||:old.orderexecution_end_type );
  end;
/
show errors

--------------------------------------------------
--- administrator

create trigger inv_administrator_ins
  after insert on administrator
  for each row
  declare
  begin
    invalidation.on_mutate( 'administrator', 'ins', 0, :new.administrator_id );
  end;
/
show errors

create trigger inv_administrator_upd
  before update on administrator
  for each row
  declare
  begin
    invalidation.on_mutate( 'administrator', 'upd', 0, :old.administrator_id );
  end;
/
show errors

create trigger inv_administrator_del
  before delete on administrator
  for each row
  declare
  begin
    invalidation.on_mutate( 'administrator', 'del', 0, :old.administrator_id );
  end;
/
show errors

--------------------------------------------------
--- branch_market_repay_dealt_cond

create trigger inv_branch_market_repay_de_ins
  after insert on branch_market_repay_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_market_repay_dealt_cond', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.market_code||','||:new.repayment_div||','||:new.repayment_num );
  end;
/
show errors

create trigger inv_branch_market_repay_de_upd
  before update on branch_market_repay_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_market_repay_dealt_cond', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.market_code||','||:old.repayment_div||','||:old.repayment_num );
  end;
/
show errors

create trigger inv_branch_market_repay_de_del
  before delete on branch_market_repay_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_market_repay_dealt_cond', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.market_code||','||:old.repayment_div||','||:old.repayment_num );
  end;
/
show errors

--------------------------------------------------
--- tradingpower_calc_condition

create trigger inv_tradingpower_calc_cond_ins
  after insert on tradingpower_calc_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'tradingpower_calc_condition', 'ins', 0, :new.calc_condition_id );
  end;
/
show errors

create trigger inv_tradingpower_calc_cond_upd
  before update on tradingpower_calc_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'tradingpower_calc_condition', 'upd', 0, :old.calc_condition_id );
  end;
/
show errors

create trigger inv_tradingpower_calc_cond_del
  before delete on tradingpower_calc_condition
  for each row
  declare
  begin
    invalidation.on_mutate( 'tradingpower_calc_condition', 'del', 0, :old.calc_condition_id );
  end;
/
show errors

--------------------------------------------------
--- fin_institution

create trigger inv_fin_institution_ins
  after insert on fin_institution
  for each row
  declare
  begin
    invalidation.on_mutate( 'fin_institution', 'ins', 0, :new.institution_code||','||:new.fin_institution_code );
  end;
/
show errors

create trigger inv_fin_institution_upd
  before update on fin_institution
  for each row
  declare
  begin
    invalidation.on_mutate( 'fin_institution', 'upd', 0, :old.institution_code||','||:old.fin_institution_code );
  end;
/
show errors

create trigger inv_fin_institution_del
  before delete on fin_institution
  for each row
  declare
  begin
    invalidation.on_mutate( 'fin_institution', 'del', 0, :old.institution_code||','||:old.fin_institution_code );
  end;
/
show errors

--------------------------------------------------
--- transfered_fin_institution

create trigger inv_transfered_fin_institu_ins
  after insert on transfered_fin_institution
  for each row
  declare
  begin
    invalidation.on_mutate( 'transfered_fin_institution', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.account_code||','||:new.designate_div );
  end;
/
show errors

create trigger inv_transfered_fin_institu_upd
  before update on transfered_fin_institution
  for each row
  declare
  begin
    invalidation.on_mutate( 'transfered_fin_institution', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.account_code||','||:old.designate_div );
  end;
/
show errors

create trigger inv_transfered_fin_institu_del
  before delete on transfered_fin_institution
  for each row
  declare
  begin
    invalidation.on_mutate( 'transfered_fin_institution', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.account_code||','||:old.designate_div );
  end;
/
show errors

--------------------------------------------------
--- fin_institution_available

create trigger inv_fin_institution_availa_ins
  after insert on fin_institution_available
  for each row
  declare
  begin
    invalidation.on_mutate( 'fin_institution_available', 'ins', 0, :new.rowid );
  end;
/
show errors

create trigger inv_fin_institution_availa_upd
  before update on fin_institution_available
  for each row
  declare
  begin
    invalidation.on_mutate( 'fin_institution_available', 'upd', 0, :old.rowid );
  end;
/
show errors

create trigger inv_fin_institution_availa_del
  before delete on fin_institution_available
  for each row
  declare
  begin
    invalidation.on_mutate( 'fin_institution_available', 'del', 0, :old.rowid );
  end;
/
show errors

--------------------------------------------------
--- mail_info

create trigger inv_mail_info_ins
  after insert on mail_info
  for each row
  declare
  begin
    invalidation.on_mutate( 'mail_info', 'ins', 0, :new.institution_code||','||:new.sendmail_div||','||:new.discernment_id );
  end;
/
show errors

create trigger inv_mail_info_upd
  before update on mail_info
  for each row
  declare
  begin
    invalidation.on_mutate( 'mail_info', 'upd', 0, :old.institution_code||','||:old.sendmail_div||','||:old.discernment_id );
  end;
/
show errors

create trigger inv_mail_info_del
  before delete on mail_info
  for each row
  declare
  begin
    invalidation.on_mutate( 'mail_info', 'del', 0, :old.institution_code||','||:old.sendmail_div||','||:old.discernment_id );
  end;
/
show errors

--------------------------------------------------
--- srv_regi_application

create trigger inv_srv_regi_application_ins
  after insert on srv_regi_application
  for each row
  declare
  begin
    invalidation.on_mutate( 'srv_regi_application', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.srv_div||','||:new.account_code||','||:new.regist_id );
  end;
/
show errors

create trigger inv_srv_regi_application_upd
  before update on srv_regi_application
  for each row
  declare
  begin
    invalidation.on_mutate( 'srv_regi_application', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.srv_div||','||:old.account_code||','||:old.regist_id );
  end;
/
show errors

create trigger inv_srv_regi_application_del
  before delete on srv_regi_application
  for each row
  declare
  begin
    invalidation.on_mutate( 'srv_regi_application', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.srv_div||','||:old.account_code||','||:old.regist_id );
  end;
/
show errors

--------------------------------------------------
--- administrator_type

create trigger inv_administrator_type_ins
  after insert on administrator_type
  for each row
  declare
  begin
    invalidation.on_mutate( 'administrator_type', 'ins', 0, :new.institution_code||','||:new.permission_level );
  end;
/
show errors

create trigger inv_administrator_type_upd
  before update on administrator_type
  for each row
  declare
  begin
    invalidation.on_mutate( 'administrator_type', 'upd', 0, :old.institution_code||','||:old.permission_level );
  end;
/
show errors

create trigger inv_administrator_type_del
  before delete on administrator_type
  for each row
  declare
  begin
    invalidation.on_mutate( 'administrator_type', 'del', 0, :old.institution_code||','||:old.permission_level );
  end;
/
show errors

--------------------------------------------------
--- admin_permission

create trigger inv_admin_permission_ins
  after insert on admin_permission
  for each row
  declare
  begin
    invalidation.on_mutate( 'admin_permission', 'ins', 0, :new.institution_code||','||:new.permission_level||','||:new.transaction_category );
  end;
/
show errors

create trigger inv_admin_permission_upd
  before update on admin_permission
  for each row
  declare
  begin
    invalidation.on_mutate( 'admin_permission', 'upd', 0, :old.institution_code||','||:old.permission_level||','||:old.transaction_category );
  end;
/
show errors

create trigger inv_admin_permission_del
  before delete on admin_permission
  for each row
  declare
  begin
    invalidation.on_mutate( 'admin_permission', 'del', 0, :old.institution_code||','||:old.permission_level||','||:old.transaction_category );
  end;
/
show errors

--------------------------------------------------
--- process_management

create trigger inv_process_management_ins
  after insert on process_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'process_management', 'ins', 0, :new.process_id||','||:new.institution_code||','||:new.branch_code );
  end;
/
show errors

create trigger inv_process_management_upd
  before update on process_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'process_management', 'upd', 0, :old.process_id||','||:old.institution_code||','||:old.branch_code );
  end;
/
show errors

create trigger inv_process_management_del
  before delete on process_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'process_management', 'del', 0, :old.process_id||','||:old.institution_code||','||:old.branch_code );
  end;
/
show errors

--------------------------------------------------
--- yellow_customer

create trigger inv_yellow_customer_ins
  after insert on yellow_customer
  for each row
  declare
  begin
    invalidation.on_mutate( 'yellow_customer', 'ins', 0, :new.institution_code||','||:new.era_born||','||:new.born_date||','||:new.name_kana||','||:new.name );
  end;
/
show errors

create trigger inv_yellow_customer_upd
  before update on yellow_customer
  for each row
  declare
  begin
    invalidation.on_mutate( 'yellow_customer', 'upd', 0, :old.institution_code||','||:old.era_born||','||:old.born_date||','||:old.name_kana||','||:old.name );
  end;
/
show errors

create trigger inv_yellow_customer_del
  before delete on yellow_customer
  for each row
  declare
  begin
    invalidation.on_mutate( 'yellow_customer', 'del', 0, :old.institution_code||','||:old.era_born||','||:old.born_date||','||:old.name_kana||','||:old.name );
  end;
/
show errors

--------------------------------------------------
--- fin_institution_bank

create trigger inv_fin_institution_bank_ins
  after insert on fin_institution_bank
  for each row
  declare
  begin
    invalidation.on_mutate( 'fin_institution_bank', 'ins', 0, :new.fin_institution_code||','||:new.fin_branch_code );
  end;
/
show errors

create trigger inv_fin_institution_bank_upd
  before update on fin_institution_bank
  for each row
  declare
  begin
    invalidation.on_mutate( 'fin_institution_bank', 'upd', 0, :old.fin_institution_code||','||:old.fin_branch_code );
  end;
/
show errors

create trigger inv_fin_institution_bank_del
  before delete on fin_institution_bank
  for each row
  declare
  begin
    invalidation.on_mutate( 'fin_institution_bank', 'del', 0, :old.fin_institution_code||','||:old.fin_branch_code );
  end;
/
show errors

--------------------------------------------------
--- daily_asset

create trigger inv_daily_asset_ins
  after insert on daily_asset
  for each row
  declare
  begin
    invalidation.on_mutate( 'daily_asset', 'ins', 0, :new.account_id||','||:new.sub_account_id||','||:new.product_id||','||:new.tax_type||','||to_char(:new.delivery_date, 'YYMMDDHH24MISS')||','||:new.mini_stock_div||','||:new.split_new_stock_div||','||to_char(:new.original_exec_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_daily_asset_upd
  before update on daily_asset
  for each row
  declare
  begin
    invalidation.on_mutate( 'daily_asset', 'upd', 0, :old.account_id||','||:old.sub_account_id||','||:old.product_id||','||:old.tax_type||','||to_char(:old.delivery_date, 'YYMMDDHH24MISS')||','||:old.mini_stock_div||','||:old.split_new_stock_div||','||to_char(:old.original_exec_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_daily_asset_del
  before delete on daily_asset
  for each row
  declare
  begin
    invalidation.on_mutate( 'daily_asset', 'del', 0, :old.account_id||','||:old.sub_account_id||','||:old.product_id||','||:old.tax_type||','||to_char(:old.delivery_date, 'YYMMDDHH24MISS')||','||:old.mini_stock_div||','||:old.split_new_stock_div||','||to_char(:old.original_exec_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

--------------------------------------------------
--- question

create trigger inv_question_ins
  after insert on question
  for each row
  declare
  begin
    invalidation.on_mutate( 'question', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.question_div||','||:new.question_no );
  end;
/
show errors

create trigger inv_question_upd
  before update on question
  for each row
  declare
  begin
    invalidation.on_mutate( 'question', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.question_div||','||:old.question_no );
  end;
/
show errors

create trigger inv_question_del
  before delete on question
  for each row
  declare
  begin
    invalidation.on_mutate( 'question', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.question_div||','||:old.question_no );
  end;
/
show errors

--------------------------------------------------
--- other_org_srv_time

create trigger inv_other_org_srv_time_ins
  after insert on other_org_srv_time
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_org_srv_time', 'ins', 0, :new.other_org_code||','||:new.week_div||','||:new.service_start_time||','||:new.service_end_time );
  end;
/
show errors

create trigger inv_other_org_srv_time_upd
  before update on other_org_srv_time
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_org_srv_time', 'upd', 0, :old.other_org_code||','||:old.week_div||','||:old.service_start_time||','||:old.service_end_time );
  end;
/
show errors

create trigger inv_other_org_srv_time_del
  before delete on other_org_srv_time
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_org_srv_time', 'del', 0, :old.other_org_code||','||:old.week_div||','||:old.service_start_time||','||:old.service_end_time );
  end;
/
show errors

--------------------------------------------------
--- other_org_out_of_srv_date

create trigger inv_other_org_out_of_srv_d_ins
  after insert on other_org_out_of_srv_date
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_org_out_of_srv_date', 'ins', 0, :new.other_org_code||','||:new.suspension_date||','||:new.suspension_start_time||','||:new.suspension_end_time );
  end;
/
show errors

create trigger inv_other_org_out_of_srv_d_upd
  before update on other_org_out_of_srv_date
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_org_out_of_srv_date', 'upd', 0, :old.other_org_code||','||:old.suspension_date||','||:old.suspension_start_time||','||:old.suspension_end_time );
  end;
/
show errors

create trigger inv_other_org_out_of_srv_d_del
  before delete on other_org_out_of_srv_date
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_org_out_of_srv_date', 'del', 0, :old.other_org_code||','||:old.suspension_date||','||:old.suspension_start_time||','||:old.suspension_end_time );
  end;
/
show errors

--------------------------------------------------
--- other_org_out_of_srv_week

create trigger inv_other_org_out_of_srv_w_ins
  after insert on other_org_out_of_srv_week
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_org_out_of_srv_week', 'ins', 0, :new.other_org_code||','||:new.month||','||:new.week_div||','||:new.week_no||','||:new.suspension_start_time||','||:new.suspension_end_time );
  end;
/
show errors

create trigger inv_other_org_out_of_srv_w_upd
  before update on other_org_out_of_srv_week
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_org_out_of_srv_week', 'upd', 0, :old.other_org_code||','||:old.month||','||:old.week_div||','||:old.week_no||','||:old.suspension_start_time||','||:old.suspension_end_time );
  end;
/
show errors

create trigger inv_other_org_out_of_srv_w_del
  before delete on other_org_out_of_srv_week
  for each row
  declare
  begin
    invalidation.on_mutate( 'other_org_out_of_srv_week', 'del', 0, :old.other_org_code||','||:old.month||','||:old.week_div||','||:old.week_no||','||:old.suspension_start_time||','||:old.suspension_end_time );
  end;
/
show errors

--------------------------------------------------
--- last_closing_price

create trigger inv_last_closing_price_ins
  after insert on last_closing_price
  for each row
  declare
  begin
    invalidation.on_mutate( 'last_closing_price', 'ins', 0, :new.product_id||','||to_char(:new.base_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_last_closing_price_upd
  before update on last_closing_price
  for each row
  declare
  begin
    invalidation.on_mutate( 'last_closing_price', 'upd', 0, :old.product_id||','||to_char(:old.base_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_last_closing_price_del
  before delete on last_closing_price
  for each row
  declare
  begin
    invalidation.on_mutate( 'last_closing_price', 'del', 0, :old.product_id||','||to_char(:old.base_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

--------------------------------------------------
--- bato_function_pref

create trigger inv_bato_function_pref_ins
  after insert on bato_function_pref
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_function_pref', 'ins', 0, :new.function_div );
  end;
/
show errors

create trigger inv_bato_function_pref_upd
  before update on bato_function_pref
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_function_pref', 'upd', 0, :old.function_div );
  end;
/
show errors

create trigger inv_bato_function_pref_del
  before delete on bato_function_pref
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_function_pref', 'del', 0, :old.function_div );
  end;
/
show errors

--------------------------------------------------
--- bato_branch_product_pref

create trigger inv_bato_branch_product_pr_ins
  after insert on bato_branch_product_pref
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_branch_product_pref', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.product_code );
  end;
/
show errors

create trigger inv_bato_branch_product_pr_upd
  before update on bato_branch_product_pref
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_branch_product_pref', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.product_code );
  end;
/
show errors

create trigger inv_bato_branch_product_pr_del
  before delete on bato_branch_product_pref
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_branch_product_pref', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.product_code );
  end;
/
show errors

--------------------------------------------------
--- bato_inst_branch_pref

create trigger inv_bato_inst_branch_pref_ins
  after insert on bato_inst_branch_pref
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_inst_branch_pref', 'ins', 0, :new.institution_code||','||:new.branch_code );
  end;
/
show errors

create trigger inv_bato_inst_branch_pref_upd
  before update on bato_inst_branch_pref
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_inst_branch_pref', 'upd', 0, :old.institution_code||','||:old.branch_code );
  end;
/
show errors

create trigger inv_bato_inst_branch_pref_del
  before delete on bato_inst_branch_pref
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_inst_branch_pref', 'del', 0, :old.institution_code||','||:old.branch_code );
  end;
/
show errors

--------------------------------------------------
--- bato_doctype_management

create trigger inv_bato_doctype_managemen_ins
  after insert on bato_doctype_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_doctype_management', 'ins', 0, :new.institution_code||','||:new.type_code );
  end;
/
show errors

create trigger inv_bato_doctype_managemen_upd
  before update on bato_doctype_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_doctype_management', 'upd', 0, :old.institution_code||','||:old.type_code );
  end;
/
show errors

create trigger inv_bato_doctype_managemen_del
  before delete on bato_doctype_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_doctype_management', 'del', 0, :old.institution_code||','||:old.type_code );
  end;
/
show errors

--------------------------------------------------
--- order_switching

create trigger inv_order_switching_ins
  after insert on order_switching
  for each row
  declare
  begin
    invalidation.on_mutate( 'order_switching', 'ins', 0, :new.institution_code||','||:new.product_type||','||:new.market_code||','||:new.submit_order_route_div||','||:new.front_order_system_code );
  end;
/
show errors

create trigger inv_order_switching_upd
  before update on order_switching
  for each row
  declare
  begin
    invalidation.on_mutate( 'order_switching', 'upd', 0, :old.institution_code||','||:old.product_type||','||:old.market_code||','||:old.submit_order_route_div||','||:old.front_order_system_code );
  end;
/
show errors

create trigger inv_order_switching_del
  before delete on order_switching
  for each row
  declare
  begin
    invalidation.on_mutate( 'order_switching', 'del', 0, :old.institution_code||','||:old.product_type||','||:old.market_code||','||:old.submit_order_route_div||','||:old.front_order_system_code );
  end;
/
show errors

--------------------------------------------------
--- request_codes_for_read

create trigger inv_request_codes_for_read_ins
  after insert on request_codes_for_read
  for each row
  declare
  begin
    invalidation.on_mutate( 'request_codes_for_read', 'ins', 0, :new.request_code||','||:new.ptype );
  end;
/
show errors

create trigger inv_request_codes_for_read_upd
  before update on request_codes_for_read
  for each row
  declare
  begin
    invalidation.on_mutate( 'request_codes_for_read', 'upd', 0, :old.request_code||','||:old.ptype );
  end;
/
show errors

create trigger inv_request_codes_for_read_del
  before delete on request_codes_for_read
  for each row
  declare
  begin
    invalidation.on_mutate( 'request_codes_for_read', 'del', 0, :old.request_code||','||:old.ptype );
  end;
/
show errors

--------------------------------------------------
--- product_estimation_ratio

create trigger inv_product_estimation_rat_ins
  after insert on product_estimation_ratio
  for each row
  declare
  begin
    invalidation.on_mutate( 'product_estimation_ratio', 'ins', 0, :new.institution_code||','||:new.product_type );
  end;
/
show errors

create trigger inv_product_estimation_rat_upd
  before update on product_estimation_ratio
  for each row
  declare
  begin
    invalidation.on_mutate( 'product_estimation_ratio', 'upd', 0, :old.institution_code||','||:old.product_type );
  end;
/
show errors

create trigger inv_product_estimation_rat_del
  before delete on product_estimation_ratio
  for each row
  declare
  begin
    invalidation.on_mutate( 'product_estimation_ratio', 'del', 0, :old.institution_code||','||:old.product_type );
  end;
/
show errors

--------------------------------------------------
--- branch_preferences

create trigger inv_branch_preferences_ins
  after insert on branch_preferences
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_preferences', 'ins', 0, :new.branch_id||','||:new.name||','||:new.name_serial_no );
  end;
/
show errors

create trigger inv_branch_preferences_upd
  before update on branch_preferences
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_preferences', 'upd', 0, :old.branch_id||','||:old.name||','||:old.name_serial_no );
  end;
/
show errors

create trigger inv_branch_preferences_del
  before delete on branch_preferences
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_preferences', 'del', 0, :old.branch_id||','||:old.name||','||:old.name_serial_no );
  end;
/
show errors

--------------------------------------------------
--- feq_branch_market_dealt_cond

create trigger inv_feq_branch_market_deal_ins
  after insert on feq_branch_market_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_branch_market_dealt_cond', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.market_code );
  end;
/
show errors

create trigger inv_feq_branch_market_deal_upd
  before update on feq_branch_market_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_branch_market_dealt_cond', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.market_code );
  end;
/
show errors

create trigger inv_feq_branch_market_deal_del
  before delete on feq_branch_market_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_branch_market_dealt_cond', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.market_code );
  end;
/
show errors

--------------------------------------------------
--- feq_calendar

create trigger inv_feq_calendar_ins
  after insert on feq_calendar
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_calendar', 'ins', 0, :new.institution_code||','||:new.market_code||','||to_char(:new.biz_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_feq_calendar_upd
  before update on feq_calendar
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_calendar', 'upd', 0, :old.institution_code||','||:old.market_code||','||to_char(:old.biz_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_feq_calendar_del
  before delete on feq_calendar
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_calendar', 'del', 0, :old.institution_code||','||:old.market_code||','||to_char(:old.biz_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

--------------------------------------------------
--- virtual_server_information

create trigger inv_virtual_server_informa_ins
  after insert on virtual_server_information
  for each row
  declare
  begin
    invalidation.on_mutate( 'virtual_server_information', 'ins', 0, :new.virtual_server_number_jsoes );
  end;
/
show errors

create trigger inv_virtual_server_informa_upd
  before update on virtual_server_information
  for each row
  declare
  begin
    invalidation.on_mutate( 'virtual_server_information', 'upd', 0, :old.virtual_server_number_jsoes );
  end;
/
show errors

create trigger inv_virtual_server_informa_del
  before delete on virtual_server_information
  for each row
  declare
  begin
    invalidation.on_mutate( 'virtual_server_information', 'del', 0, :old.virtual_server_number_jsoes );
  end;
/
show errors

--------------------------------------------------
--- virtual_server_change

create trigger inv_virtual_server_change_ins
  after insert on virtual_server_change
  for each row
  declare
  begin
    invalidation.on_mutate( 'virtual_server_change', 'ins', 0, :new.virtual_server_number_market||','||:new.change_req_res_div||','||:new.notice_type||','||:new.front_order_exchange_code );
  end;
/
show errors

create trigger inv_virtual_server_change_upd
  before update on virtual_server_change
  for each row
  declare
  begin
    invalidation.on_mutate( 'virtual_server_change', 'upd', 0, :old.virtual_server_number_market||','||:old.change_req_res_div||','||:old.notice_type||','||:old.front_order_exchange_code );
  end;
/
show errors

create trigger inv_virtual_server_change_del
  before delete on virtual_server_change
  for each row
  declare
  begin
    invalidation.on_mutate( 'virtual_server_change', 'del', 0, :old.virtual_server_number_market||','||:old.change_req_res_div||','||:old.notice_type||','||:old.front_order_exchange_code );
  end;
/
show errors

--------------------------------------------------
--- exchange_rate

create trigger inv_exchange_rate_ins
  after insert on exchange_rate
  for each row
  declare
  begin
    invalidation.on_mutate( 'exchange_rate', 'ins', 0, :new.institution_code||','||:new.currency_code );
  end;
/
show errors

create trigger inv_exchange_rate_upd
  before update on exchange_rate
  for each row
  declare
  begin
    invalidation.on_mutate( 'exchange_rate', 'upd', 0, :old.institution_code||','||:old.currency_code );
  end;
/
show errors

create trigger inv_exchange_rate_del
  before delete on exchange_rate
  for each row
  declare
  begin
    invalidation.on_mutate( 'exchange_rate', 'del', 0, :old.institution_code||','||:old.currency_code );
  end;
/
show errors

--------------------------------------------------
--- code_translation

create trigger inv_code_translation_ins
  after insert on code_translation
  for each row
  declare
  begin
    invalidation.on_mutate( 'code_translation', 'ins', 0, :new.code_type||','||:new.institution_code||','||:new.code );
  end;
/
show errors

create trigger inv_code_translation_upd
  before update on code_translation
  for each row
  declare
  begin
    invalidation.on_mutate( 'code_translation', 'upd', 0, :old.code_type||','||:old.institution_code||','||:old.code );
  end;
/
show errors

create trigger inv_code_translation_del
  before delete on code_translation
  for each row
  declare
  begin
    invalidation.on_mutate( 'code_translation', 'del', 0, :old.code_type||','||:old.institution_code||','||:old.code );
  end;
/
show errors

--------------------------------------------------
--- exclusive_use_account_cond

create trigger inv_exclusive_use_account__ins
  after insert on exclusive_use_account_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'exclusive_use_account_cond', 'ins', 0, :new.institution_code||','||:new.fin_institution_code||','||:new.fin_branch_code||','||:new.fin_account_no );
  end;
/
show errors

create trigger inv_exclusive_use_account__upd
  before update on exclusive_use_account_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'exclusive_use_account_cond', 'upd', 0, :old.institution_code||','||:old.fin_institution_code||','||:old.fin_branch_code||','||:old.fin_account_no );
  end;
/
show errors

create trigger inv_exclusive_use_account__del
  before delete on exclusive_use_account_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'exclusive_use_account_cond', 'del', 0, :old.institution_code||','||:old.fin_institution_code||','||:old.fin_branch_code||','||:old.fin_account_no );
  end;
/
show errors

--------------------------------------------------
--- soap_connect_pref_msg

create trigger inv_soap_connect_pref_msg_ins
  after insert on soap_connect_pref_msg
  for each row
  declare
  begin
    invalidation.on_mutate( 'soap_connect_pref_msg', 'ins', 0, :new.branch_id||','||:new.connect_div );
  end;
/
show errors

create trigger inv_soap_connect_pref_msg_upd
  before update on soap_connect_pref_msg
  for each row
  declare
  begin
    invalidation.on_mutate( 'soap_connect_pref_msg', 'upd', 0, :old.branch_id||','||:old.connect_div );
  end;
/
show errors

create trigger inv_soap_connect_pref_msg_del
  before delete on soap_connect_pref_msg
  for each row
  declare
  begin
    invalidation.on_mutate( 'soap_connect_pref_msg', 'del', 0, :old.branch_id||','||:old.connect_div );
  end;
/
show errors

--------------------------------------------------
--- soap_connect_pref_rpc

create trigger inv_soap_connect_pref_rpc_ins
  after insert on soap_connect_pref_rpc
  for each row
  declare
  begin
    invalidation.on_mutate( 'soap_connect_pref_rpc', 'ins', 0, :new.branch_id||','||:new.connect_div );
  end;
/
show errors

create trigger inv_soap_connect_pref_rpc_upd
  before update on soap_connect_pref_rpc
  for each row
  declare
  begin
    invalidation.on_mutate( 'soap_connect_pref_rpc', 'upd', 0, :old.branch_id||','||:old.connect_div );
  end;
/
show errors

create trigger inv_soap_connect_pref_rpc_del
  before delete on soap_connect_pref_rpc
  for each row
  declare
  begin
    invalidation.on_mutate( 'soap_connect_pref_rpc', 'del', 0, :old.branch_id||','||:old.connect_div );
  end;
/
show errors

--------------------------------------------------
--- gen_currency

create trigger inv_gen_currency_ins
  after insert on gen_currency
  for each row
  declare
  begin
    invalidation.on_mutate( 'gen_currency', 'ins', 0, :new.institution_code||','||:new.currency_code );
  end;
/
show errors

create trigger inv_gen_currency_upd
  before update on gen_currency
  for each row
  declare
  begin
    invalidation.on_mutate( 'gen_currency', 'upd', 0, :old.institution_code||','||:old.currency_code );
  end;
/
show errors

create trigger inv_gen_currency_del
  before delete on gen_currency
  for each row
  declare
  begin
    invalidation.on_mutate( 'gen_currency', 'del', 0, :old.institution_code||','||:old.currency_code );
  end;
/
show errors

--------------------------------------------------
--- stock_option_product

create trigger inv_stock_option_product_ins
  after insert on stock_option_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'stock_option_product', 'ins', 0, :new.institution_code||','||:new.branch_id||','||:new.account_id||','||:new.product_id );
  end;
/
show errors

create trigger inv_stock_option_product_upd
  before update on stock_option_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'stock_option_product', 'upd', 0, :old.institution_code||','||:old.branch_id||','||:old.account_id||','||:old.product_id );
  end;
/
show errors

create trigger inv_stock_option_product_del
  before delete on stock_option_product
  for each row
  declare
  begin
    invalidation.on_mutate( 'stock_option_product', 'del', 0, :old.institution_code||','||:old.branch_id||','||:old.account_id||','||:old.product_id );
  end;
/
show errors

--------------------------------------------------
--- comm_code_chg_mst

create trigger inv_comm_code_chg_mst_ins
  after insert on comm_code_chg_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'comm_code_chg_mst', 'ins', 0, :new.branch_id||','||:new.comm_product_code||','||:new.commission_no||','||:new.appli_start_date );
  end;
/
show errors

create trigger inv_comm_code_chg_mst_upd
  before update on comm_code_chg_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'comm_code_chg_mst', 'upd', 0, :old.branch_id||','||:old.comm_product_code||','||:old.commission_no||','||:old.appli_start_date );
  end;
/
show errors

create trigger inv_comm_code_chg_mst_del
  before delete on comm_code_chg_mst
  for each row
  declare
  begin
    invalidation.on_mutate( 'comm_code_chg_mst', 'del', 0, :old.branch_id||','||:old.comm_product_code||','||:old.commission_no||','||:old.appli_start_date );
  end;
/
show errors

--------------------------------------------------
--- market_margin_ratio

create trigger inv_market_margin_ratio_ins
  after insert on market_margin_ratio
  for each row
  declare
  begin
    invalidation.on_mutate( 'market_margin_ratio', 'ins', 0, :new.institution_code||','||:new.market_id||','||:new.list_type||','||:new.new_list_type||','||:new.securities_estimation_div );
  end;
/
show errors

create trigger inv_market_margin_ratio_upd
  before update on market_margin_ratio
  for each row
  declare
  begin
    invalidation.on_mutate( 'market_margin_ratio', 'upd', 0, :old.institution_code||','||:old.market_id||','||:old.list_type||','||:old.new_list_type||','||:old.securities_estimation_div );
  end;
/
show errors

create trigger inv_market_margin_ratio_del
  before delete on market_margin_ratio
  for each row
  declare
  begin
    invalidation.on_mutate( 'market_margin_ratio', 'del', 0, :old.institution_code||','||:old.market_id||','||:old.list_type||','||:old.new_list_type||','||:old.securities_estimation_div );
  end;
/
show errors

--------------------------------------------------
--- frgn_mmf_exchange_rate

create trigger inv_frgn_mmf_exchange_rate_ins
  after insert on frgn_mmf_exchange_rate
  for each row
  declare
  begin
    invalidation.on_mutate( 'frgn_mmf_exchange_rate', 'ins', 0, :new.institution_code||','||:new.currency_code );
  end;
/
show errors

create trigger inv_frgn_mmf_exchange_rate_upd
  before update on frgn_mmf_exchange_rate
  for each row
  declare
  begin
    invalidation.on_mutate( 'frgn_mmf_exchange_rate', 'upd', 0, :old.institution_code||','||:old.currency_code );
  end;
/
show errors

create trigger inv_frgn_mmf_exchange_rate_del
  before delete on frgn_mmf_exchange_rate
  for each row
  declare
  begin
    invalidation.on_mutate( 'frgn_mmf_exchange_rate', 'del', 0, :old.institution_code||','||:old.currency_code );
  end;
/
show errors

--------------------------------------------------
--- f_trans_fin_institution

create trigger inv_f_trans_fin_institutio_ins
  after insert on f_trans_fin_institution
  for each row
  declare
  begin
    invalidation.on_mutate( 'f_trans_fin_institution', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.account_code||','||:new.currency_code );
  end;
/
show errors

create trigger inv_f_trans_fin_institutio_upd
  before update on f_trans_fin_institution
  for each row
  declare
  begin
    invalidation.on_mutate( 'f_trans_fin_institution', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.account_code||','||:old.currency_code );
  end;
/
show errors

create trigger inv_f_trans_fin_institutio_del
  before delete on f_trans_fin_institution
  for each row
  declare
  begin
    invalidation.on_mutate( 'f_trans_fin_institution', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.account_code||','||:old.currency_code );
  end;
/
show errors

--------------------------------------------------
--- direct_debit

create trigger inv_direct_debit_ins
  after insert on direct_debit
  for each row
  declare
  begin
    invalidation.on_mutate( 'direct_debit', 'ins', 0, :new.rowid );
  end;
/
show errors

create trigger inv_direct_debit_upd
  before update on direct_debit
  for each row
  declare
  begin
    invalidation.on_mutate( 'direct_debit', 'upd', 0, :old.rowid );
  end;
/
show errors

create trigger inv_direct_debit_del
  before delete on direct_debit
  for each row
  declare
  begin
    invalidation.on_mutate( 'direct_debit', 'del', 0, :old.rowid );
  end;
/
show errors

--------------------------------------------------
--- login_wdog_attribute

create trigger inv_login_wdog_attribute_ins
  after insert on login_wdog_attribute
  for each row
  declare
  begin
    invalidation.on_mutate( 'login_wdog_attribute', 'ins', 0, :new.institution_code||','||:new.attribute_name||','||:new.attribute_name_serial_no );
  end;
/
show errors

create trigger inv_login_wdog_attribute_upd
  before update on login_wdog_attribute
  for each row
  declare
  begin
    invalidation.on_mutate( 'login_wdog_attribute', 'upd', 0, :old.institution_code||','||:old.attribute_name||','||:old.attribute_name_serial_no );
  end;
/
show errors

create trigger inv_login_wdog_attribute_del
  before delete on login_wdog_attribute
  for each row
  declare
  begin
    invalidation.on_mutate( 'login_wdog_attribute', 'del', 0, :old.institution_code||','||:old.attribute_name||','||:old.attribute_name_serial_no );
  end;
/
show errors

--------------------------------------------------
--- branch_listmarket_dealt_cond

create trigger inv_branch_listmarket_deal_ins
  after insert on branch_listmarket_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_listmarket_dealt_cond', 'ins', 0, :new.branch_id||','||:new.market_id||','||:new.list_type||','||:new.new_list_type||','||:new.open_otc_div );
  end;
/
show errors

create trigger inv_branch_listmarket_deal_upd
  before update on branch_listmarket_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_listmarket_dealt_cond', 'upd', 0, :old.branch_id||','||:old.market_id||','||:old.list_type||','||:old.new_list_type||','||:old.open_otc_div );
  end;
/
show errors

create trigger inv_branch_listmarket_deal_del
  before delete on branch_listmarket_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_listmarket_dealt_cond', 'del', 0, :old.branch_id||','||:old.market_id||','||:old.list_type||','||:old.new_list_type||','||:old.open_otc_div );
  end;
/
show errors

--------------------------------------------------
--- doc_div_management

create trigger inv_doc_div_management_ins
  after insert on doc_div_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'doc_div_management', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.document_div||','||:new.document_category );
  end;
/
show errors

create trigger inv_doc_div_management_upd
  before update on doc_div_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'doc_div_management', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.document_div||','||:old.document_category );
  end;
/
show errors

create trigger inv_doc_div_management_del
  before delete on doc_div_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'doc_div_management', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.document_div||','||:old.document_category );
  end;
/
show errors

--------------------------------------------------
--- bato_product_management

create trigger inv_bato_product_managemen_ins
  after insert on bato_product_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_product_management', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.document_div||','||:new.bato_product_code );
  end;
/
show errors

create trigger inv_bato_product_managemen_upd
  before update on bato_product_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_product_management', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.document_div||','||:old.bato_product_code );
  end;
/
show errors

create trigger inv_bato_product_managemen_del
  before delete on bato_product_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'bato_product_management', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.document_div||','||:old.bato_product_code );
  end;
/
show errors

--------------------------------------------------
--- sonar_trader

create trigger inv_sonar_trader_ins
  after insert on sonar_trader
  for each row
  declare
  begin
    invalidation.on_mutate( 'sonar_trader', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.sonar_trader_code );
  end;
/
show errors

create trigger inv_sonar_trader_upd
  before update on sonar_trader
  for each row
  declare
  begin
    invalidation.on_mutate( 'sonar_trader', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.sonar_trader_code );
  end;
/
show errors

create trigger inv_sonar_trader_del
  before delete on sonar_trader
  for each row
  declare
  begin
    invalidation.on_mutate( 'sonar_trader', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.sonar_trader_code );
  end;
/
show errors

--------------------------------------------------
--- feq_last_closing_price

create trigger inv_feq_last_closing_price_ins
  after insert on feq_last_closing_price
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_last_closing_price', 'ins', 0, :new.product_id||','||to_char(:new.base_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_feq_last_closing_price_upd
  before update on feq_last_closing_price
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_last_closing_price', 'upd', 0, :old.product_id||','||to_char(:old.base_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

create trigger inv_feq_last_closing_price_del
  before delete on feq_last_closing_price
  for each row
  declare
  begin
    invalidation.on_mutate( 'feq_last_closing_price', 'del', 0, :old.product_id||','||to_char(:old.base_date, 'YYMMDDHH24MISS') );
  end;
/
show errors

--------------------------------------------------
--- branch_market_pts_dealt_cond

create trigger inv_branch_market_pts_deal_ins
  after insert on branch_market_pts_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_market_pts_dealt_cond', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.market_code );
  end;
/
show errors

create trigger inv_branch_market_pts_deal_upd
  before update on branch_market_pts_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_market_pts_dealt_cond', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.market_code );
  end;
/
show errors

create trigger inv_branch_market_pts_deal_del
  before delete on branch_market_pts_dealt_cond
  for each row
  declare
  begin
    invalidation.on_mutate( 'branch_market_pts_dealt_cond', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.market_code );
  end;
/
show errors

--------------------------------------------------
--- pts_orderexecution_end

create trigger inv_pts_orderexecution_end_ins
  after insert on pts_orderexecution_end
  for each row
  declare
  begin
    invalidation.on_mutate( 'pts_orderexecution_end', 'ins', 0, :new.institution_code||','||:new.market_code );
  end;
/
show errors

create trigger inv_pts_orderexecution_end_upd
  before update on pts_orderexecution_end
  for each row
  declare
  begin
    invalidation.on_mutate( 'pts_orderexecution_end', 'upd', 0, :old.institution_code||','||:old.market_code );
  end;
/
show errors

create trigger inv_pts_orderexecution_end_del
  before delete on pts_orderexecution_end
  for each row
  declare
  begin
    invalidation.on_mutate( 'pts_orderexecution_end', 'del', 0, :old.institution_code||','||:old.market_code );
  end;
/
show errors

--------------------------------------------------
--- doc_category_management

create trigger inv_doc_category_managemen_ins
  after insert on doc_category_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'doc_category_management', 'ins', 0, :new.institution_code||','||:new.branch_code||','||:new.document_category );
  end;
/
show errors

create trigger inv_doc_category_managemen_upd
  before update on doc_category_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'doc_category_management', 'upd', 0, :old.institution_code||','||:old.branch_code||','||:old.document_category );
  end;
/
show errors

create trigger inv_doc_category_managemen_del
  before delete on doc_category_management
  for each row
  declare
  begin
    invalidation.on_mutate( 'doc_category_management', 'del', 0, :old.institution_code||','||:old.branch_code||','||:old.document_category );
  end;
/
show errors

--------------------------------------------------
--- institution_preferences

create trigger inv_institution_preference_ins
  after insert on institution_preferences
  for each row
  declare
  begin
    invalidation.on_mutate( 'institution_preferences', 'ins', 0, :new.institution_id||','||:new.name||','||:new.name_serial_no );
  end;
/
show errors

create trigger inv_institution_preference_upd
  before update on institution_preferences
  for each row
  declare
  begin
    invalidation.on_mutate( 'institution_preferences', 'upd', 0, :old.institution_id||','||:old.name||','||:old.name_serial_no );
  end;
/
show errors

create trigger inv_institution_preference_del
  before delete on institution_preferences
  for each row
  declare
  begin
    invalidation.on_mutate( 'institution_preferences', 'del', 0, :old.institution_id||','||:old.name||','||:old.name_serial_no );
  end;
/
show errors

--------------------------------------------------
--- era

create trigger inv_era_ins
  after insert on era
  for each row
  declare
  begin
    invalidation.on_mutate( 'era', 'ins', 0, :new.japanese_era_div );
  end;
/
show errors

create trigger inv_era_upd
  before update on era
  for each row
  declare
  begin
    invalidation.on_mutate( 'era', 'upd', 0, :old.japanese_era_div );
  end;
/
show errors

create trigger inv_era_del
  before delete on era
  for each row
  declare
  begin
    invalidation.on_mutate( 'era', 'del', 0, :old.japanese_era_div );
  end;
/
show errors

@
