head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2011.03.28.09.06.23;	author zhang-tengyu;	state Exp;
branches;
next	;
deltatype	text;
kopt	b;
permissions	666;
commitid	5cc4d904f795afc;
filename	xbifo_account_triggers.sql;


desc
@@


1.1
log
@*** empty log message ***
@
text
@------------------------------------------------------------------
-- Autogenerated per-table triggers for mutators
------------------------------------------------------------------

--------------------------------------------------
--- ifo_closing_contract_spec

create trigger inv_ifo_closing_contract_s_ins
  after insert on ifo_closing_contract_spec
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_closing_contract_spec', 'ins', :new.account_id, :new.closing_contract_spec_id );
  end;
/
show errors

create trigger inv_ifo_closing_contract_s_upd
  before update on ifo_closing_contract_spec
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_closing_contract_spec', 'upd', :old.account_id, :old.closing_contract_spec_id );
  end;
/
show errors

create trigger inv_ifo_closing_contract_s_del
  before delete on ifo_closing_contract_spec
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_closing_contract_spec', 'del', :old.account_id, :old.closing_contract_spec_id );
  end;
/
show errors

--------------------------------------------------
--- ifo_contract

create trigger inv_ifo_contract_ins
  after insert on ifo_contract
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_contract', 'ins', :new.account_id, :new.contract_id );
  end;
/
show errors

create trigger inv_ifo_contract_upd
  before update on ifo_contract
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_contract', 'upd', :old.account_id, :old.contract_id );
  end;
/
show errors

create trigger inv_ifo_contract_del
  before delete on ifo_contract
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_contract', 'del', :old.account_id, :old.contract_id );
  end;
/
show errors

--------------------------------------------------
--- ifo_locked_contract_details

create trigger inv_ifo_locked_contract_de_ins
  after insert on ifo_locked_contract_details
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_locked_contract_details', 'ins', :new.account_id, :new.contract_id );
  end;
/
show errors

create trigger inv_ifo_locked_contract_de_upd
  before update on ifo_locked_contract_details
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_locked_contract_details', 'upd', :old.account_id, :old.contract_id );
  end;
/
show errors

create trigger inv_ifo_locked_contract_de_del
  before delete on ifo_locked_contract_details
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_locked_contract_details', 'del', :old.account_id, :old.contract_id );
  end;
/
show errors

--------------------------------------------------
--- ifo_fin_transaction

create trigger inv_ifo_fin_transaction_ins
  after insert on ifo_fin_transaction
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_fin_transaction', 'ins', :new.account_id, :new.fin_transaction_id );
  end;
/
show errors

create trigger inv_ifo_fin_transaction_upd
  before update on ifo_fin_transaction
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_fin_transaction', 'upd', :old.account_id, :old.fin_transaction_id );
  end;
/
show errors

create trigger inv_ifo_fin_transaction_del
  before delete on ifo_fin_transaction
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_fin_transaction', 'del', :old.account_id, :old.fin_transaction_id );
  end;
/
show errors

--------------------------------------------------
--- ifo_order

create trigger inv_ifo_order_ins
  after insert on ifo_order
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order', 'ins', :new.account_id, :new.order_id );
  end;
/
show errors

create trigger inv_ifo_order_upd
  before update on ifo_order
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order', 'upd', :old.account_id, :old.order_id );
  end;
/
show errors

create trigger inv_ifo_order_del
  before delete on ifo_order
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order', 'del', :old.account_id, :old.order_id );
  end;
/
show errors

--------------------------------------------------
--- ifo_order_action

create trigger inv_ifo_order_action_ins
  after insert on ifo_order_action
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order_action', 'ins', :new.account_id, :new.order_action_id );
  end;
/
show errors

create trigger inv_ifo_order_action_upd
  before update on ifo_order_action
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order_action', 'upd', :old.account_id, :old.order_action_id );
  end;
/
show errors

create trigger inv_ifo_order_action_del
  before delete on ifo_order_action
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order_action', 'del', :old.account_id, :old.order_action_id );
  end;
/
show errors

--------------------------------------------------
--- ifo_order_execution

create trigger inv_ifo_order_execution_ins
  after insert on ifo_order_execution
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order_execution', 'ins', :new.account_id, :new.order_execution_id );
  end;
/
show errors

create trigger inv_ifo_order_execution_upd
  before update on ifo_order_execution
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order_execution', 'upd', :old.account_id, :old.order_execution_id );
  end;
/
show errors

create trigger inv_ifo_order_execution_del
  before delete on ifo_order_execution
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order_execution', 'del', :old.account_id, :old.order_execution_id );
  end;
/
show errors

--------------------------------------------------
--- ifo_order_unit

create trigger inv_ifo_order_unit_ins
  after insert on ifo_order_unit
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order_unit', 'ins', :new.account_id, :new.order_unit_id );
  end;
/
show errors

create trigger inv_ifo_order_unit_upd
  before update on ifo_order_unit
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order_unit', 'upd', :old.account_id, :old.order_unit_id );
  end;
/
show errors

create trigger inv_ifo_order_unit_del
  before delete on ifo_order_unit
  for each row
  declare
  begin
    invalidation.on_mutate( 'ifo_order_unit', 'del', :old.account_id, :old.order_unit_id );
  end;
/
show errors

@
