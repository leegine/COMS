head	1.1;
access;
symbols;
locks; strict;
comment	@// @;


1.1
date	2011.04.06.08.31.10;	author zhang-tengyu;	state Exp;
branches;
next	;
deltatype	text;
kopt	kv;
permissions	666;
commitid	1944d9c24957ec8;
filename	WEB3AccInfoOccupationChangeRegistVoucherCreatedTest.java;


desc
@@


1.1
log
@*** empty log message ***
@
text
@/**
Copyright        : (äî)ëÂòaëçå§ èÿåîÉ\ÉäÉÖÅ[ÉVÉáÉìÉVÉXÉeÉÄëÊìÒïî
File Name        : êEã∆ïœçXê\çûì`ï[çÏê¨ÉeÉXÉg (WEB3AccInfoOccupationChangeRegistVoucherCreatedTest.java)
Author Name      : Daiwa Institute of Research
Revision History : 2007/02/12 óõñÿéq (íÜêu) êVãKçÏê¨
*/
package webbroker3.accountinfo;



import java.util.Calendar;
import java.util.List;

import com.fitechlabs.xtrade.kernel.data.Processors;
import com.fitechlabs.xtrade.kernel.data.QueryProcessor;
import com.fitechlabs.xtrade.plugin.tc.gentrade.BooleanEnum;
import com.fitechlabs.xtrade.plugin.tc.gentrade.MainAccountStatusEnum;
import com.fitechlabs.xtrade.plugin.tc.gentrade.MainAccountTypeEnum;
import com.fitechlabs.xtrade.plugin.tc.gentrade.TaxTypeEnum;
import com.fitechlabs.xtrade.plugin.tc.gentrade.data.MainAccountParams;

import test.util.TestDBUtility;

import webbroker3.accountinfo.data.MobileOfficeInfoRegistParams;
import webbroker3.accountopen.data.TradeConditionVoucherParams;
import webbroker3.common.WEB3BaseException;
import webbroker3.gentrade.WEB3GentradeMainAccount;
import webbroker3.gentrade.data.AccountInfoMstParams;
import webbroker3.gentrade.data.MainAccountAllRow;
import webbroker3.mock.TestBaseForMock;
import webbroker3.util.WEB3DateUtility;
import webbroker3.util.WEB3LogUtility;

/**
 * (êEã∆ïœçXê\çûì`ï[çÏê¨ÉeÉXÉg)<BR>
 * êEã∆ïœçXê\çûì`ï[çÏê¨ÉNÉâÉXÉeÉXÉg<BR>
 * <BR>
 * @@author óõñÿéq<BR>
 * @@version 1.0<BR>
 */
public class WEB3AccInfoOccupationChangeRegistVoucherCreatedTest extends
        TestBaseForMock {

    /**
     * Log Variable
     */
    private static WEB3LogUtility log =
        WEB3LogUtility.getInstance(WEB3AccInfoOccupationChangeRegistVoucherCreatedTest.class);

    public WEB3AccInfoOccupationChangeRegistVoucherCreatedTest(String arg0) {
        super(arg0);
    }

    protected void setUp() throws Exception {
        super.setUp();
    }

    protected void tearDown() throws Exception {
        super.tearDown();
    }

    /**
     * isì`ï[çÏê¨<BR>
     * ì`ï[çÏê¨ÇÃâ¬î€Çîªï Ç∑ÇÈÅB<BR>
     * <BR>
     */
    public void test_isVoucherCreated_0001()
    {
        final String STR_METHOD_NAME = ".test_isVoucherCreated_0001()";
        log.entering(STR_METHOD_NAME);

        WEB3AccInfoOccupationChangeRegistVoucherCreated l_accInfoOccupationChangeRegistVoucherCreated =
            new WEB3AccInfoOccupationChangeRegistVoucherCreated();
        MobileOfficeInfoRegistParams l_mobileOfficeInfoRegistParams = new MobileOfficeInfoRegistParams();

        l_mobileOfficeInfoRegistParams.setMobileOfficeInfoRegistId(123456789L);
        l_mobileOfficeInfoRegistParams.setInstitutionCode("0D");
        l_mobileOfficeInfoRegistParams.setBranchId(33381L);
        l_mobileOfficeInfoRegistParams.setAccountId(333812512246L);
        l_mobileOfficeInfoRegistParams.setAccountCode("2450007");
        l_mobileOfficeInfoRegistParams.setRegistUpdater("333812512246");
        l_mobileOfficeInfoRegistParams.setDeleteFlag(BooleanEnum.FALSE);
        l_mobileOfficeInfoRegistParams.setLastUpdater("2450007");
        l_mobileOfficeInfoRegistParams.setCreatedTimestamp(Calendar.getInstance().getTime());
        l_mobileOfficeInfoRegistParams.setLastUpdatedTimestamp(Calendar.getInstance().getTime());
        l_mobileOfficeInfoRegistParams.setOccupationDiv("999999999");

        WEB3AccInfoMaster l_accInfoMaster = null;

        try
        {
            boolean l_blnVoucherCreated = l_accInfoOccupationChangeRegistVoucherCreated.isVoucherCreated(
                l_mobileOfficeInfoRegistParams, l_accInfoMaster);
            assertTrue(l_blnVoucherCreated);
        }
        catch (Exception l_ex)
        {
            log.error(l_ex.getMessage(), l_ex);
            log.exiting(STR_METHOD_NAME);
            fail();
        }
        log.exiting(STR_METHOD_NAME);
    }

    /**
     * isì`ï[çÏê¨<BR>
     * ì`ï[çÏê¨ÇÃâ¬î€Çîªï Ç∑ÇÈÅB<BR>
     * <BR>
     */
    public void test_isVoucherCreated_0002()
    {
        final String STR_METHOD_NAME = ".test_isVoucherCreated_0002()";
        log.entering(STR_METHOD_NAME);

        WEB3AccInfoOccupationChangeRegistVoucherCreated l_accInfoOccupationChangeRegistVoucherCreated =
            new WEB3AccInfoOccupationChangeRegistVoucherCreated();
        MobileOfficeInfoRegistParams l_mobileOfficeInfoRegistParams = new MobileOfficeInfoRegistParams();
        AccountInfoMstParams l_accountInfoMstParams = new AccountInfoMstParams();

        l_accountInfoMstParams.setAccountCode("2450007");

        l_mobileOfficeInfoRegistParams.setMobileOfficeInfoRegistId(123456789L);
        l_mobileOfficeInfoRegistParams.setInstitutionCode("0D");
        l_mobileOfficeInfoRegistParams.setBranchId(33381L);
        l_mobileOfficeInfoRegistParams.setAccountId(333812512246L);
        l_mobileOfficeInfoRegistParams.setAccountCode("2450007");
        l_mobileOfficeInfoRegistParams.setRegistUpdater("333812512246");
        l_mobileOfficeInfoRegistParams.setDeleteFlag(BooleanEnum.FALSE);
        l_mobileOfficeInfoRegistParams.setLastUpdater("2450007");
        l_mobileOfficeInfoRegistParams.setCreatedTimestamp(Calendar.getInstance().getTime());
        l_mobileOfficeInfoRegistParams.setLastUpdatedTimestamp(Calendar.getInstance().getTime());
        l_mobileOfficeInfoRegistParams.setOccupationDiv("999999999");

        WEB3AccInfoMaster l_accInfoMaster = new WEB3AccInfoMaster(l_accountInfoMstParams);

        try
        {
            boolean l_blnVoucherCreated = l_accInfoOccupationChangeRegistVoucherCreated.isVoucherCreated(
                l_mobileOfficeInfoRegistParams, l_accInfoMaster);
            assertTrue(l_blnVoucherCreated);
        }
        catch (Exception l_ex)
        {
            log.error(l_ex.getMessage(), l_ex);
            log.exiting(STR_METHOD_NAME);
            fail();
        }
        log.exiting(STR_METHOD_NAME);
    }

    /**
     * isì`ï[çÏê¨<BR>
     * ì`ï[çÏê¨ÇÃâ¬î€Çîªï Ç∑ÇÈÅB<BR>
     * <BR>
     */
    public void test_isVoucherCreated_0003()
    {
        final String STR_METHOD_NAME = ".test_isVoucherCreated_0003()";
        log.entering(STR_METHOD_NAME);

        WEB3AccInfoOccupationChangeRegistVoucherCreated l_accInfoOccupationChangeRegistVoucherCreated =
            new WEB3AccInfoOccupationChangeRegistVoucherCreated();
        MobileOfficeInfoRegistParams l_mobileOfficeInfoRegistParams = new MobileOfficeInfoRegistParams();
        AccountInfoMstParams l_accountInfoMstParams = new AccountInfoMstParams();

        l_accountInfoMstParams.setOccupationDiv("888888888");

        l_mobileOfficeInfoRegistParams.setMobileOfficeInfoRegistId(123456789L);
        l_mobileOfficeInfoRegistParams.setInstitutionCode("0D");
        l_mobileOfficeInfoRegistParams.setBranchId(33381L);
        l_mobileOfficeInfoRegistParams.setAccountId(333812512246L);
        l_mobileOfficeInfoRegistParams.setAccountCode("2450007");
        l_mobileOfficeInfoRegistParams.setRegistUpdater("333812512246");
        l_mobileOfficeInfoRegistParams.setDeleteFlag(BooleanEnum.FALSE);
        l_mobileOfficeInfoRegistParams.setLastUpdater("2450007");
        l_mobileOfficeInfoRegistParams.setCreatedTimestamp(Calendar.getInstance().getTime());
        l_mobileOfficeInfoRegistParams.setLastUpdatedTimestamp(Calendar.getInstance().getTime());
        l_mobileOfficeInfoRegistParams.setOccupationDiv("999999999");

        WEB3AccInfoMaster l_accInfoMaster = new WEB3AccInfoMaster(l_accountInfoMstParams);

        try
        {
            boolean l_blnVoucherCreated = l_accInfoOccupationChangeRegistVoucherCreated.isVoucherCreated(
                l_mobileOfficeInfoRegistParams, l_accInfoMaster);
            assertTrue(l_blnVoucherCreated);
        }
        catch (Exception l_ex)
        {
            log.error(l_ex.getMessage(), l_ex);
            log.exiting(STR_METHOD_NAME);
            fail();
        }
        log.exiting(STR_METHOD_NAME);
    }

    /**
     * isì`ï[çÏê¨<BR>
     * ì`ï[çÏê¨ÇÃâ¬î€Çîªï Ç∑ÇÈÅB<BR>
     * <BR>
     */
    public void test_isVoucherCreated_0004()
    {
        final String STR_METHOD_NAME = ".test_isVoucherCreated_0004()";
        log.entering(STR_METHOD_NAME);

        WEB3AccInfoOccupationChangeRegistVoucherCreated l_accInfoOccupationChangeRegistVoucherCreated =
            new WEB3AccInfoOccupationChangeRegistVoucherCreated();
        MobileOfficeInfoRegistParams l_mobileOfficeInfoRegistParams = new MobileOfficeInfoRegistParams();
        
        l_mobileOfficeInfoRegistParams.setMobileOfficeInfoRegistId(123456789L);
        l_mobileOfficeInfoRegistParams.setInstitutionCode("0D");
        l_mobileOfficeInfoRegistParams.setBranchId(33381L);
        l_mobileOfficeInfoRegistParams.setAccountId(333812512246L);
        l_mobileOfficeInfoRegistParams.setAccountCode("2450007");
        l_mobileOfficeInfoRegistParams.setRegistUpdater("333812512246");
        l_mobileOfficeInfoRegistParams.setDeleteFlag(BooleanEnum.FALSE);
        l_mobileOfficeInfoRegistParams.setLastUpdater("2450007");
        l_mobileOfficeInfoRegistParams.setCreatedTimestamp(Calendar.getInstance().getTime());
        l_mobileOfficeInfoRegistParams.setLastUpdatedTimestamp(Calendar.getInstance().getTime());

        WEB3AccInfoMaster l_accInfoMaster = null;

        try
        {
            boolean l_blnVoucherCreated = l_accInfoOccupationChangeRegistVoucherCreated.isVoucherCreated(
                l_mobileOfficeInfoRegistParams, l_accInfoMaster);
            assertTrue(!l_blnVoucherCreated);
        }
        catch (Exception l_ex)
        {
            log.error(l_ex.getMessage(), l_ex);
            log.exiting(STR_METHOD_NAME);
            fail();
        }
        log.exiting(STR_METHOD_NAME);
    }

    /**
     * (createêEã∆ïœçXì`ï[)<BR>
     * êEã∆ïœçXÇ…î∫Ç§éÊécÅEìdéqåïtÅEì¡íËå˚ç¿ì`ï[ÅiGI844ÅjÇçÏê¨Ç∑ÇÈÅB<BR>
     */
    public void test_createOccupationChangeVoucher_0001()
    {
        final String STR_METHOD_NAME = ".test_isVoucherCreated_0003()";
        log.entering(STR_METHOD_NAME);

        MainAccountAllRow l_mainAccountAllRow = null;
        WEB3AccInfoOccupationChangeRegistVoucherCreated l_accInfoOccupationChangeRegistVoucherCreated =
            new WEB3AccInfoOccupationChangeRegistVoucherCreated(l_mainAccountAllRow);
        MainAccountParams l_mainAccountRow = this.getMainAccountRow();
        TradeConditionVoucherParams l_tradeConditionVoucherParams = new TradeConditionVoucherParams();

        try
        {
            TestDBUtility.deleteAll(l_tradeConditionVoucherParams.getRowType());
            TestDBUtility.insertWithDelAndCommit(l_mainAccountRow);
        }
        catch (Exception e)
        {
            fail();
        }

        try
        {
            WEB3GentradeMainAccount l_mainAccount = new WEB3GentradeMainAccount(33L, "38", "2512246");

            l_accInfoOccupationChangeRegistVoucherCreated.createOccupationChangeVoucher(11111111L, "88", l_mainAccount);

            QueryProcessor l_qp = Processors.getDefaultProcessor();

            List l_listTradeConditionVoucher = l_qp.doFindAllQuery(l_tradeConditionVoucherParams.getRowType());

            TradeConditionVoucherParams l_tradeConditionVoucherParamsForTest =
                (TradeConditionVoucherParams)l_listTradeConditionVoucher.get(0);

            assertEquals("0D", l_tradeConditionVoucherParamsForTest.getInstitutionCode());
            assertEquals("38", l_tradeConditionVoucherParamsForTest.getBranchCode());
            assertEquals("2512246", l_tradeConditionVoucherParamsForTest.getAccountCode());
            assertEquals("11124", l_tradeConditionVoucherParamsForTest.getTraderCode());
            assertNull(l_tradeConditionVoucherParamsForTest.getTradingEReportDiv());
            assertNull(l_tradeConditionVoucherParamsForTest.getInvEReportDiv());
            assertNull(l_tradeConditionVoucherParamsForTest.getPosReportTermDiv());
            assertNull(l_tradeConditionVoucherParamsForTest.getPosReportCycleDiv());
            assertNull(l_tradeConditionVoucherParamsForTest.getPosReportCertifDepoDiv());
            assertNull(l_tradeConditionVoucherParamsForTest.getPosReportAccStateDiv());
            assertNull(l_tradeConditionVoucherParamsForTest.getEquityTaxDiv());
            assertNull(l_tradeConditionVoucherParamsForTest.getEquityTaxDivNext());
            assertNull(l_tradeConditionVoucherParamsForTest.getEquitySpAccOpenDat());
            assertNull(l_tradeConditionVoucherParamsForTest.getMarginTaxDiv());
            assertNull(l_tradeConditionVoucherParamsForTest.getMarginTaxDivNext());
            assertNull(l_tradeConditionVoucherParamsForTest.getMarginSpAccOpenDat());
            assertNull(l_tradeConditionVoucherParamsForTest.getSpMngAccOpenDiv());
            assertEquals("88", l_tradeConditionVoucherParamsForTest.getOccupationDiv());
            assertEquals("1", l_tradeConditionVoucherParamsForTest.getRegistDiv());
            assertEquals(11111111L, l_tradeConditionVoucherParamsForTest.getMobileOfficeInfoRegistId());
        }
        catch (Exception l_ex)
        {
            log.error(l_ex.getMessage(), l_ex);
            log.exiting(STR_METHOD_NAME);
            fail();
        }
        log.exiting(STR_METHOD_NAME);
    }

    /**
     * å⁄ãqÉ}ÉXÉ^Å[RowÇçÏê¨.<BR>
     */
    public MainAccountParams getMainAccountRow()
    {
        MainAccountParams l_mainAccountParams = new MainAccountParams();

        // å˚ç¿ÇhÇc
        l_mainAccountParams.setAccountId(333812512246L);
        // èÿåîâÔé–ÉRÅ[Éh
        l_mainAccountParams.setInstitutionCode("0D");
        // èÿåîâÔé–ID
        l_mainAccountParams.setInstitutionId(33L);
        // å˚ç¿ÉRÅ[Éh
        l_mainAccountParams.setAccountCode("2512246");
        // ïîìXÇhÇc
        l_mainAccountParams.setBranchId(33381L);
        // ïîìXÉRÅ[Éh
        l_mainAccountParams.setBranchCode("38");
        // àµé“ÉRÅ[ÉhÅiSONARÅj
        l_mainAccountParams.setSonarTraderCode("11124");
        // å˚ç¿É^ÉCÉv
        l_mainAccountParams.setAccountType(MainAccountTypeEnum.INDIVIDUAL_ACCOUNT);
        // ñºëOÅiïcéöÅj
        l_mainAccountParams.setFamilyName("ì‡ì°Å@@élòY");
        // ñºëOÅiïcéö1Åj
        l_mainAccountParams.setFamilyNameAlt1("≈≤ƒ≥ º€≥");
        // ñºëOÅiñºëO1Åj
        l_mainAccountParams.setGivenNameAlt1("Siro");
        // óXï÷î‘çÜ
        l_mainAccountParams.setZipCode("1001238");
        // Åiï‚èïÅjóXï÷î‘çÜ
        l_mainAccountParams.setSubZipCode("1001238");
        // èZèäÇP
        l_mainAccountParams.setAddressLine1("ìåãûìs");
        // èZèäÇQ
        l_mainAccountParams.setAddressLine2("ç]ìåãÊ");
        // èZèäÇR
        l_mainAccountParams.setAddressLine3("ê[êÏÇT");
        // ìdòbî‘çÜ
        l_mainAccountParams.setTelephone("38201115");
        // òAóçêÊìdòbî‘çÜÅiågë—Åj
        l_mainAccountParams.setMobile("901115");
        // ÇeÇ`Çwî‘çÜ
        l_mainAccountParams.setFax("38202226");
        // äîéÆñÒíËÉÅÅ[ÉãëóêMÉtÉâÉO
        l_mainAccountParams.setEquityOrderExeMailFlag(BooleanEnum.TRUE);
        // äîéÆñ¢ñÒíËÉÅÅ[ÉãëóêMÉtÉâÉO
        l_mainAccountParams.setEquityOrderUnexecMailFlag(BooleanEnum.TRUE);
        // êÊï®OPñÒíËÉÅÅ[ÉãëóêMÉtÉâÉO
        l_mainAccountParams.setIfoOrderExecMailFlag(BooleanEnum.TRUE);
        // êÊï®OPñ¢ñÒíËÉÅÅ[ÉãëóêMÉtÉâÉO
        l_mainAccountParams.setIfoOrderUnexecMailFlag(BooleanEnum.TRUE);
        // àƒì‡ÉÅÅ[ÉãëóêMÉtÉâÉO
        l_mainAccountParams.setInformationMailFlag(BooleanEnum.TRUE);
        // ãèèZÅ^îÒãèèZãÊï™
        l_mainAccountParams.setResident("0");
        // êVãKå˚ç¿ãÊï™
        l_mainAccountParams.setNewAccountDiv("0");
        // êMëıåoóRãÊï™
        l_mainAccountParams.setViaTrustBankDiv("0");
        // emailÉAÉhÉåÉX
        l_mainAccountParams.setEmailAddress("t4@@dir.co.jp");
        // éÊà¯ÉpÉXÉèÅ[Éh
        l_mainAccountParams.setTradingPassword("&:,<#!+=!.,#:##&");
        // å˚ç¿ìoò^ì˙
        l_mainAccountParams.setAccountOpenDate(WEB3DateUtility.getDate("20040202","yyyyMMdd"));
        // å˚ç¿ï¬çΩì˙
        l_mainAccountParams.setAccountCloseDate(WEB3DateUtility.getDate("99991231","yyyyMMdd"));
        // ñ{êlämîFãÊï™
        l_mainAccountParams.setPersonIdentify("1");
        // ê∂îNåéì˙îNçÜ
        l_mainAccountParams.setEraBorn("3");
        // ê∂îNåéì˙
        l_mainAccountParams.setBornDate("101013");
        // ê´ï 
        l_mainAccountParams.setSex("1");
        // ÇxãqãÊï™
        l_mainAccountParams.setYellowCustomer("0");
        // ÉzÅ[ÉÄÉgÉåÅ[Éhåàçœï˚ñ@@
        l_mainAccountParams.setHtSettlementWay("0");
        // êUçûêÊÅiã‚çså˚ç¿Åjìoò^ãÊï™
        l_mainAccountParams.setBankAccountRegi("0");
        // å˚ç¿ÉXÉeÅ[É^ÉX
        l_mainAccountParams.setAccountStatus(MainAccountStatusEnum.ACTIVE);
        // çlç∏ÉçÉbÉN
        l_mainAccountParams.setExaminLockFlag("0");
        // ä«óùÉçÉbÉN
        l_mainAccountParams.setMngLockFlag("0");
        // ä«óùÉçÉbÉNóùóRÉtÉâÉOÅióßë÷ã‡Åj
        l_mainAccountParams.setMngLockFlagAdvance(BooleanEnum.FALSE);
        // ä«óùÉçÉbÉNóùóRÉtÉâÉOÅiï€èÿã‡ñ¢ì¸Åj
        l_mainAccountParams.setMngLockFlagUnpayMargin(BooleanEnum.FALSE);
        // ä«óùÉçÉbÉNóùóRÉtÉâÉOÅiìKäiíSï€ïsë´Åj
        l_mainAccountParams.setMngLockFlagShortSecurity(BooleanEnum.FALSE);
        // ä«óùÉçÉbÉNóùóRÉtÉâÉOÅióaÇËèÿí∑ä˙ñ¢ç∑ä∑Åj
        l_mainAccountParams.setMngLockFlagUnsubstitDepo(BooleanEnum.FALSE);
        // éxìXÉçÉbÉN
        l_mainAccountParams.setBranchLock("0");
        // íçï∂îFâ¬
        l_mainAccountParams.setOrderPermission("0");
        // ê≈ãÊï™
        l_mainAccountParams.setTaxType(TaxTypeEnum.SPECIAL);
        // ê≈ãÊï™ÅiéüîNÅj
        l_mainAccountParams.setTaxTypeNext(TaxTypeEnum.SPECIAL_WITHHOLD);
        // êMópéÊà¯ê≈ãÊï™
        l_mainAccountParams.setMarginTaxType(TaxTypeEnum.UNDEFINED);
        // êMópéÊà¯ê≈ãÊï™ÅiéüîNÅj
        l_mainAccountParams.setMarginTaxTypeNext(TaxTypeEnum.UNDEFINED);
        // ìKäiã@@ä÷ìäéëâ∆ãÊï™
        l_mainAccountParams.setQualifiedInstInvestorDiv("0");
        // êßìxêMópéÊà¯å˚ç¿äJê›ãÊï™
        l_mainAccountParams.setMarginSysAccOpenDiv("0");
        // àÍî êMópéÊà¯å˚ç¿äJê›ãÊï™
        l_mainAccountParams.setMarginGenAccOpenDiv("0");
        // åªï®äîéÆì¡íËå˚ç¿äJê›ì˙
        l_mainAccountParams.setEquitySpAccOpenDate(WEB3DateUtility.getDate("20040202","yyyyMMdd"));
        // äOçëèÿåîå˚ç¿äJê›ãÊï™
        l_mainAccountParams.setForeignSecAccOpenDiv("1");
        // êÊï®OPå˚ç¿äJê›ãÊï™ÅiìåèÿÅj
        l_mainAccountParams.setIfoAccOpenDivTokyo("0");
        // êÊï®OPå˚ç¿äJê›ãÊï™ÅiëÂèÿÅj
        l_mainAccountParams.setIfoAccOpenDivOsaka("0");
        // êÊï®OPå˚ç¿äJê›ãÊï™ÅiñºèÿÅj
        l_mainAccountParams.setIfoAccOpenDivNagoya("0");
        // ó›ìäå˚ç¿äJê›ãÊï™
        l_mainAccountParams.setRuitoAccOpenDiv("0");
        // ÇlÇqÇeå˚ç¿äJê›ãÊï™
        l_mainAccountParams.setMrfAccOpenDiv("0");
        // ÇeÇwå˚ç¿äJê›ãÊï™
        l_mainAccountParams.setFxAccOpenDiv("0");
        // äOçëäîéÆòAågå˚ç¿äJê›ãÊï™
        l_mainAccountParams.setFeqConAccOpenDiv("0");
        // êÊì™âÊñ ID
        l_mainAccountParams.setTopPageId("0");
        // éûâøéÊìæãÊï™
        l_mainAccountParams.setQuotoType("0");
        // éÊà¯ïÒçêèëåïtãÊï™
        l_mainAccountParams.setTradingReportDiv("1");
        // éÊà¯écçÇïÒçêèëåïtãÊï™
        l_mainAccountParams.setPositionReportDiv("9");
        // éÊà¯écçÇïÒçêèëçÏê¨é¸ä˙ãÊï™
        l_mainAccountParams.setPositionReportCycleDiv("1");
        // éÊà¯écçÇïÒçêèëóaÇËèÿçÏê¨ÉtÉâÉO
        l_mainAccountParams.setCertificateDepositFlag(BooleanEnum.TRUE);
        // éÊà¯écçÇïÒçêèëåvéZèëçÏê¨ÉtÉâÉO
        l_mainAccountParams.setAccountStatementFlag(BooleanEnum.TRUE);
        // emailÉAÉhÉåÉXçXêVé“ÉRÅ[Éh
        l_mainAccountParams.setEmailLastUpdater("2512246");
        // emailÉAÉhÉåÉXçXêVì˙éû
        l_mainAccountParams.setEmailLastUpdatedTimestamp(Calendar.getInstance().getTime());
        // éÊà¯ÉpÉXÉèÅ[ÉhçXêVé“ÉRÅ[Éh
        l_mainAccountParams.setTradingPasswordUpdater("2512246");
        // éÊà¯ÉpÉXÉèÅ[ÉhçXêVì˙éû
        l_mainAccountParams.setTrPwdLastUpdateTimestamp(Calendar.getInstance().getTime());
        // ågë—î‘çÜÅEãŒñ±êÊèÓïÒçXêVé“ÉRÅ[Éh
        l_mainAccountParams.setMbOffLastUpdater("2512246");
        // ågë—î‘çÜÅEãŒñ±êÊèÓïÒçXêVì˙éû
        l_mainAccountParams.setMbOffLastUpdatedTimestamp(Calendar.getInstance().getTime());
        // í‚é~èÛãµçXêVé“ÉRÅ[Éh
        l_mainAccountParams.setEnableOrderLastUpdater("2512246");
        // í‚é~èÛãµçXêVì˙éû
        l_mainAccountParams.setEnableOrderUpdatedTimestamp(Calendar.getInstance().getTime());
        // ÇeÇwå˚ç¿äJê›ãÊï™çXêVé“ÉRÅ[Éh
        l_mainAccountParams.setFxAccOpenDivLastUpdater("2512246");
        // ÇeÇwå˚ç¿äJê›ãÊï™çXêVì˙éû
        l_mainAccountParams.setFxAccOpenUpdatedTimestamp(Calendar.getInstance().getTime());
        // äOçëäîéÆòAågå˚ç¿äJê›ãÊï™çXêVé“ÉRÅ[Éh
        l_mainAccountParams.setFeqConAccOpenDivUpdater("2512246");
        // äOçëäîéÆòAågå˚ç¿äJê›ãÊï™çXêVì˙éû
        l_mainAccountParams.setFeqConAccOpenTimestamp(Calendar.getInstance().getTime());
        // ÇlÇqÇeê›íËâÔé–
        l_mainAccountParams.setMrfFundCode("1");
        // çÏê¨ì˙éû
        l_mainAccountParams.setCreatedTimestamp(Calendar.getInstance().getTime());
        // çXêVì˙éû
        l_mainAccountParams.setLastUpdatedTimestamp(Calendar.getInstance().getTime());
        // ì¡íËä«óùå˚ç¿äJê›ãÊï™
        l_mainAccountParams.setSpMngAccOpenDiv("0");

        return l_mainAccountParams;
    }
}
@
