<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>lj.coms</groupId>
  <artifactId>coms</artifactId>
  <version>1.1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>

    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <downloadSources>true</downloadSources>
    <downloadJavadocs>true</downloadJavadocs>

    <spring-boot.version>1.5.9.RELEASE</spring-boot.version>

    <commonslang3.version>3.4</commonslang3.version>

    <javax.inject.version>1</javax.inject.version>

    <mockito.version>1.9.5</mockito.version>
    <testng.version>6.8.7</testng.version>

    <maven.jar.plugin.version>2.6</maven.jar.plugin.version>
    <maven.failsafe.plugin.version>2.19</maven.failsafe.plugin.version>

    <disruptor.version>3.3.4</disruptor.version>
    <jms-api.version>2.0.1</jms-api.version>

    <fasterxml.uuid.version>3.1.3</fasterxml.uuid.version>

    <javatuples.version>1.2</javatuples.version>

  </properties>

  <modules>
    <module>jms-base</module>
    <module>jms-msg</module>
    <module>jms-client</module>
    <module>jms-server</module>
    <module>web</module>
    <module>backend</module>
    <module>oms</module>
    <module>qs</module>
    <!--<module>rls</module>-->
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- Import dependency management from Spring Boot -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>${javax.inject.version}</version>
      </dependency>

      <!--MySql的驱动-->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>5.1.40</version>
      </dependency>

      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>${testng.version}</version>
      </dependency>

      <dependency>
        <groupId>org.javatuples</groupId>
        <artifactId>javatuples</artifactId>
        <version>${javatuples.version}</version>

      </dependency>
      <!--misc-->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commonslang3.version}</version>
      </dependency>

      <!-- disruptor -->
      <dependency>
        <groupId>com.lmax</groupId>
        <artifactId>disruptor</artifactId>
        <version>${disruptor.version}</version>
      </dependency>

      <!-- JMS -->
      <dependency>
        <groupId>javax.jms</groupId>
        <artifactId>javax.jms-api</artifactId>
        <version>${jms-api.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.uuid</groupId>
        <artifactId>java-uuid-generator</artifactId>
        <version>${fasterxml.uuid.version}</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <url>http://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>spring-releases</id>
      <url>https://repo.spring.io/libs-release</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>spring-releases</id>
      <url>https://repo.spring.io/libs-release</url>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

    </plugins>

    <pluginManagement>
      <plugins>

        <!-- http://maven.apache.org/guides/mini/guide-attached-tests.html
        将test代码打成*-test.jar, 用于test代码的复用
        -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
              <configuration>
                <skipIfEmpty>true</skipIfEmpty>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- http://zeroturnaround.com/rebellabs/the-correct-way-to-use-integration-tests-in-your-build-process/
        将集成测试独立出来, 单元测试的代码是*Test.java, 集成测试的代码是 *IT.java
        -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven.failsafe.plugin.version}</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <systemPropertyVariables>
              <!--
                spring.config.location的值是spring配置文件的路径, 这些文件供集成测试使用,
                这样就将spring的配置外部化了, 便于集成测试的灵活配置,

                spring.config.location的值应该在.m2/settings.xml的profile中配置,
                如此在使用mvn clean integration-test时就能够通过指定profile来使用不同的配置

                关于spring.config.location的文档在这里:
                http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config-application-property-files
              -->
              <spring.config.location>${spring.config.location}</spring.config.location>
            </systemPropertyVariables>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>

  </build>

</project>
